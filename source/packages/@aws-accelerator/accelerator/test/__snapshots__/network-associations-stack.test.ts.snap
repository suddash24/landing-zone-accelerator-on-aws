// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NetworkAssociationsStack Construct(NetworkAssociationsStack):  Snapshot Test 1`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratorkmslambdakeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/lambda/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkdirectConnectGatewaysNetworkDXGWidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/directConnectGateways/Network-DXGW/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/prefixList/accelerator-prefix-list/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistipv6idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/prefixList/accelerator-prefix-list-ipv6/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverfirewallruleGroupsacceleratorblockgroupidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/firewall/ruleGroups/accelerator-block-group/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsacceleratorquerylogscwlidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/queryLogConfigs/accelerator-query-logs-cwl/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsacceleratorquerylogss3idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/queryLogConfigs/accelerator-query-logs-s3/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsnetworklocalendpointquerylogscwlidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/queryLogConfigs/network-local-endpoint-query-logs-cwl/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsnetworklocalendpointquerylogss3idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/queryLogConfigs/network-local-endpoint-query-logs-s3/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverrulesexampleruleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/rules/example-rule/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main-2/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2CoreidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main-2/routeTables/Network-Main-2-Core/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2SegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main-2/routeTables/Network-Main-2-Segregated/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2SharedidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main-2/routeTables/Network-Main-2-Shared/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2StandaloneidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main-2/routeTables/Network-Main-2-Standalone/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/routeTables/Network-Main-Core/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/routeTables/Network-Main-Segregated/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/routeTables/Network-Main-Shared/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainStandaloneidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/routeTables/Network-Main-Standalone/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Half-Ipam-Central/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Half-Ipam-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Half-Ipam-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Half-Static-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Half-Static-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsalbappAalb01idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/alb/appA-alb-01/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointscidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsnetworkAclTestNACLidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/networkAcl/TestNACL/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsnlbappAnlb01idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/nlb/appA-nlb-01/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneaccessanalyzeridC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/access-analyzer/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonecodeartifactapiidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/codeartifact.api/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonecodeartifactrepositoriesidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/codeartifact.repositories/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneec2idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/ec2/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneec2messagesidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/ec2messages/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneecrdkridC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/ecr.dkr/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneeksidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/eks/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonekmsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/kms/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonelogsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/logs/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZones3globalaccesspointidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/s3-global.accesspoint/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZones3idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/s3/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonesecretsmanageridC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/secretsmanager/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonessmidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/ssm/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonessmmessagesidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/ssmmessages/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsTgwAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-Tgw-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsTgwBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-Tgw-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpoints2idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/transitGatewayAttachment/Network-Endpoints-2/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/transitGatewayAttachment/Network-Endpoints/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionGatewayidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-Gateway/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionLocalRtAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-Local-Rt-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionTgwAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-Tgw-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionTgwBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-Tgw-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/transitGatewayAttachment/Network-Inspection/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/routeTable/Network-NonTemplate-Ipam-Public/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Static-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticCentralrouteTableNetworkNonTemplateStaticPublicidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Static-Central/routeTable/Network-NonTemplate-Static-Public/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkSecondaryidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Secondary/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkSecondarynetworkAclTestNaclidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Secondary/networkAcl/TestNacl/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkSecondaryrouteTableNetworkSecondaryARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Secondary/routeTable/Network-Secondary-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkSecondaryrouteTableNetworkSecondaryBRtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Secondary/routeTable/Network-Secondary-B-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkSecondaryrouteTableNetworkSecondaryCRtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Secondary/routeTable/Network-Secondary-C-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkSecondaryrouteTableNetworkSecondaryDRtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Secondary/routeTable/Network-Secondary-D-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcWorkloadTemplatecidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Workload-Template/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcWorkloadTemplateidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Workload-Template/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcWorkloadTemplaterouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Workload-Template/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcWorkloadTemplaterouteTableWorkloadBRtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Workload-Template/routeTable/Workload-B-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AcceleratorVpnNetworkMainCoreAssociationEF397C51": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "AcceleratorVpnVpnTransitGatewayAttachmentFBF8EE77",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "AcceleratorVpnNetworkMainCorePropagation585EB5AE": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "AcceleratorVpnVpnTransitGatewayAttachmentFBF8EE77",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "AcceleratorVpnVpnTransitGatewayAttachmentFBF8EE77": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetTransitGatewayAttachmentCustomResourceProviderLogGroup41699CF3",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354",
            "Arn",
          ],
        },
        "name": "accelerator-vpn",
        "region": "us-east-1",
        "transitGatewayId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "type": "vpn",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetTransitGatewayAttachment",
      "UpdateReplacePolicy": "Delete",
    },
    "AssociateHostedZonesF0E2F0DA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomRoute53AssociateHostedZonesCustomResourceProviderLogGroupDEA7760D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomRoute53AssociateHostedZonesCustomResourceProviderHandler1296DB71",
            "Arn",
          ],
        },
        "accountIds": [
          "555555555555",
          "444444444444",
        ],
        "hostedZoneAccountId": "555555555555",
        "hostedZoneIds": [
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneec2idC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneec2messagesidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonessmidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonessmmessagesidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonekmsidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonelogsidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZones3idC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneecrdkridC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZones3globalaccesspointidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonecodeartifactrepositoriesidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonecodeartifactapiidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneeksidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonesecretsmanageridC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneaccessanalyzeridC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        ],
        "partition": {
          "Ref": "AWS::Partition",
        },
        "region": "us-east-1",
        "roleName": "AWSAccelerator-EnableCentralEndpointsRole-us-east-1",
        "tagFilters": [
          {
            "key": "accelerator:use-central-endpoints",
            "value": "true",
          },
          {
            "key": "accelerator:central-endpoints-account-id",
            "value": "555555555555",
          },
        ],
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::Route53AssociateHostedZones",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Cross account EC2 route OnEvent handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionLogGroupCFE2C9BD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator*",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
            {
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EC2RouteCreateDelete",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-555555555555-us-east-1/CrossAccountRouteFramework/CrossAccountRouteProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountVpcPeering9E0C69A2": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupCrossAccount444444444444usEast13BE87606",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CrossAccount",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "CrossAccountVpcPeeringNetworkEndpointsVpcNetworkEndpointsARouteTableVpcPeer338649DC": {
      "Properties": {
        "DestinationCidrBlock": "10.4.0.0/16",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsAidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "CrossAccountVpcPeering9E0C69A2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CrossAccountVpcPeeringNetworkEndpointsVpcNetworkEndpointsARouteTableVpcPeerv6521A0A3D": {
      "Properties": {
        "DestinationIpv6CidrBlock": "fd00::/8",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsAidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "CrossAccountVpcPeering9E0C69A2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CrossAccountVpcPeeringNetworkEndpointsVpcNetworkEndpointsBRouteTableVpcPeer7B5320E6": {
      "Properties": {
        "DestinationCidrBlock": "10.4.0.0/16",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsBidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "CrossAccountVpcPeering9E0C69A2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CrossAccountVpcPeeringNetworkEndpointsVpcNetworkEndpointsBRouteTableVpcPeerv69D50B758": {
      "Properties": {
        "DestinationIpv6CidrBlock": "fd00::/8",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsBidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "CrossAccountVpcPeering9E0C69A2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CrossAccountVpcPeeringSharedServicesMainVpcSharedServicesAppARouteTableVpcPeer94525782": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "10.0.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesMain444444444444SharedServicesAppA08A11B17",
          },
          "VpcPeeringConnectionId": {
            "Ref": "CrossAccountVpcPeering9E0C69A2",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountVpcPeeringSharedServicesMainVpcSharedServicesAppARouteTableVpcPeerv6B4238292": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationIpv6CidrBlock": "fd00::/8",
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesMain444444444444SharedServicesAppA08A11B17",
          },
          "VpcPeeringConnectionId": {
            "Ref": "CrossAccountVpcPeering9E0C69A2",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountVpcPeeringSharedServicesMainVpcSharedServicesAppBRouteTableVpcPeer02D33BA6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "10.0.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesMain444444444444SharedServicesAppB580D7687",
          },
          "VpcPeeringConnectionId": {
            "Ref": "CrossAccountVpcPeering9E0C69A2",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountVpcPeeringSharedServicesMainVpcSharedServicesAppBRouteTableVpcPeerv66590CCF1": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationIpv6CidrBlock": "fd00::/8",
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesMain444444444444SharedServicesAppB580D7687",
          },
          "VpcPeeringConnectionId": {
            "Ref": "CrossAccountVpcPeering9E0C69A2",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountVpcPeeringSharedServicesMainVpcSharedServicesAppCRouteTableVpcPeerAC82CB89": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "10.0.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesMain444444444444SharedServicesAppCCD1A1D60",
          },
          "VpcPeeringConnectionId": {
            "Ref": "CrossAccountVpcPeering9E0C69A2",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamCrossAccount444444444444usEast1VpcPeeringAB27C776": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "555555555555",
        "parameterAccountIds": [
          "444444444444",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/CrossAccount/id",
            "value": {
              "Ref": "CrossAccountVpcPeering9E0C69A2",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamNonTemplateIpamSameRegionCrossAccount444444444444usEast1VpcPeering1B7FD8FE": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "555555555555",
        "parameterAccountIds": [
          "444444444444",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/NonTemplate-Ipam-Same-Region-Cross-Account/id",
            "value": {
              "Ref": "NonTemplateIpamSameRegionCrossAccountVpcPeering4DF058EE",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamNonTemplateStaticSameRegionCrossAccount444444444444usEast1VpcPeering33E9A5CC": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "555555555555",
        "parameterAccountIds": [
          "444444444444",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/NonTemplate-Static-Same-Region-Cross-Account/id",
            "value": {
              "Ref": "NonTemplateStaticSameRegionCrossAccountVpcPeering55F5C86E",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomDirectConnectGatewayAssociationCustomResourceProviderHandler3BC99D92": {
      "DependsOn": [
        "CustomDirectConnectGatewayAssociationCustomResourceProviderRole7D012188",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomDirectConnectGatewayAssociationCustomResourceProviderRole7D012188",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomDirectConnectGatewayAssociationCustomResourceProviderLogGroup966224A3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomDirectConnectGatewayAssociationCustomResourceProviderHandler3BC99D92",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomDirectConnectGatewayAssociationCustomResourceProviderRole7D012188": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "directconnect:CreateDirectConnectGatewayAssociation",
                    "directconnect:DeleteDirectConnectGatewayAssociation",
                    "directconnect:DescribeDirectConnectGatewayAssociations",
                    "directconnect:UpdateDirectConnectGatewayAssociation",
                    "ec2:DescribeTransitGatewayAttachments",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "DirectConnectGatewayCRUD",
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":function:AWSAccelerator-NetworkAss-CustomDirectConnect*",
                      ],
                    ],
                  },
                  "Sid": "InvokeSelf",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5": {
      "DependsOn": [
        "CustomGetIpamSubnetCidrCustomResourceProviderRoleADF93CF4",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetIpamSubnetCidrCustomResourceProviderRoleADF93CF4",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetIpamSubnetCidrCustomResourceProviderLogGroup655A9FB7": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetIpamSubnetCidrCustomResourceProviderRoleADF93CF4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ec2:DescribeSubnets",
                    "ssm:GetParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomGetResourceShareCustomResourceProviderHandler5DB0EF7A": {
      "DependsOn": [
        "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ram:AcceptResourceShareInvitation",
                    "ram:GetResourceShareInvitations",
                    "ram:GetResourceShares",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B": {
      "DependsOn": [
        "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetResourceShareItemCustomResourceProviderLogGroup6DB08FC0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ram:ListResources",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354": {
      "DependsOn": [
        "CustomGetTransitGatewayAttachmentCustomResourceProviderRoleA6A22C3D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetTransitGatewayAttachmentCustomResourceProviderRoleA6A22C3D",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetTransitGatewayAttachmentCustomResourceProviderLogGroup41699CF3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetTransitGatewayAttachmentCustomResourceProviderRoleA6A22C3D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ec2:DescribeTransitGatewayAttachments",
                    "ec2:DescribeVpnConnections",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomRoute53AssociateHostedZonesCustomResourceProviderHandler1296DB71": {
      "DependsOn": [
        "CustomRoute53AssociateHostedZonesCustomResourceProviderRole17C82AD6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "CustomRoute53AssociateHostedZonesCustomResourceProviderRole17C82AD6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomRoute53AssociateHostedZonesCustomResourceProviderLogGroupDEA7760D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomRoute53AssociateHostedZonesCustomResourceProviderHandler1296DB71",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomRoute53AssociateHostedZonesCustomResourceProviderRole17C82AD6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeVpcs",
                    "route53:AssociateVPCWithHostedZone",
                    "route53:CreateVPCAssociationAuthorization",
                    "route53:DeleteVPCAssociationAuthorization",
                    "route53:GetHostedZone",
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "Route53AssociateHostedZonesActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC": {
      "DependsOn": [
        "CustomShareSubnetTagsCustomResourceProviderRole2582495C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomShareSubnetTagsCustomResourceProviderRole2582495C",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomShareSubnetTagsCustomResourceProviderLogGroupA1F3F80A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomShareSubnetTagsCustomResourceProviderRole2582495C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DeleteTags",
                    "ec2:CreateTags",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":*:subnet/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":*:vpc/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "ec2:DescribeTags",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeSubnets",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:PutParameter",
                    "ssm:DeleteParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F": {
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Custom resource provider to put cross-account ssm parameter value",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameter",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmPutParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3": {
      "DependsOn": [
        "CustomTransitGatewayPrefixListReferenceCustomResourceProviderRoleC5D4C080",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomTransitGatewayPrefixListReferenceCustomResourceProviderRoleC5D4C080",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomTransitGatewayPrefixListReferenceCustomResourceProviderLogGroupBC9F3669": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomTransitGatewayPrefixListReferenceCustomResourceProviderRoleC5D4C080": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:CreateTransitGatewayPrefixListReference",
                    "ec2:ModifyTransitGatewayPrefixListReference",
                    "ec2:DeleteTransitGatewayPrefixListReference",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowModifyTgwReferences",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EnhancedVpnNetworkMainCoreAssociation2D5BE78A": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "EnhancedVpnVpnTransitGatewayAttachment579ECAAD",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "EnhancedVpnNetworkMainCorePropagation47AEEE67": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "EnhancedVpnVpnTransitGatewayAttachment579ECAAD",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "EnhancedVpnVpnTransitGatewayAttachment579ECAAD": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetTransitGatewayAttachmentCustomResourceProviderLogGroup41699CF3",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354",
            "Arn",
          ],
        },
        "name": "enhanced-vpn",
        "region": "us-east-1",
        "transitGatewayId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "type": "vpn",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetTransitGatewayAttachment",
      "UpdateReplacePolicy": "Delete",
    },
    "ListenerNetworkEndpointsappAAlb01appAListener2": {
      "Properties": {
        "Certificates": [
          {},
        ],
        "DefaultActions": [
          {
            "ForwardConfig": {
              "TargetGroups": [
                {
                  "TargetGroupArn": {
                    "Ref": "NetworkEndpointsappAalbtg176E11B7D",
                  },
                },
              ],
            },
            "TargetGroupArn": {
              "Ref": "NetworkEndpointsappAalbtg176E11B7D",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsalbappAalb01idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ListenerNetworkEndpointsappANlb01appAListener1": {
      "Properties": {
        "AlpnPolicy": [],
        "Certificates": [
          {},
        ],
        "DefaultActions": [
          {
            "ForwardConfig": {
              "TargetGroups": [
                {
                  "TargetGroupArn": {
                    "Ref": "NetworkEndpointsappAnlbtg19C910FB9",
                  },
                },
              ],
            },
            "TargetGroupArn": {
              "Ref": "NetworkEndpointsappAnlbtg19C910FB9",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsnlbappAnlb01idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Port": 80,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ListenerNetworkEndpointsappANlb01appAListener2": {
      "Properties": {
        "AlpnPolicy": [],
        "Certificates": [
          {},
        ],
        "DefaultActions": [
          {
            "ForwardConfig": {
              "TargetGroups": [
                {
                  "TargetGroupArn": {
                    "Ref": "NetworkEndpointsappAnlbtg2EE7F2886",
                  },
                },
              ],
            },
            "TargetGroupArn": {
              "Ref": "NetworkEndpointsappAnlbtg2EE7F2886",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsnlbappAnlb01idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Port": 80,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "NetworkDxgwNetworkMainCoreAssociation1B0096A1": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Fn::GetAtt": [
            "NetworkDxgwNetworkMainDxGatewayAssociationF3E8BC9A",
            "TransitGatewayAttachmentId",
          ],
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "NetworkDxgwNetworkMainCorePropagation959338BE": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Fn::GetAtt": [
            "NetworkDxgwNetworkMainDxGatewayAssociationF3E8BC9A",
            "TransitGatewayAttachmentId",
          ],
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkDxgwNetworkMainDxGatewayAssociationF3E8BC9A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomDirectConnectGatewayAssociationCustomResourceProviderLogGroup966224A3",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDirectConnectGatewayAssociationCustomResourceProviderHandler3BC99D92",
            "Arn",
          ],
        },
        "allowedPrefixes": [
          "10.0.0.0/8",
          "192.168.0.0/16",
        ],
        "directConnectGatewayId": {
          "Ref": "SsmParameterValueacceleratornetworkdirectConnectGatewaysNetworkDXGWidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "gatewayId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "Custom::DirectConnectGatewayAssociation",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkEndpoints2NetworkMain2CorePropagationD9285528": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpoints2idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2CoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkEndpoints2NetworkMain2SegregatedPropagationD38531F3": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpoints2idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2SegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkEndpoints2NetworkMain2SharedAssociation8D643CD4": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpoints2idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2SharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "NetworkEndpoints2NetworkMain2SharedPropagationE3803FF5": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpoints2idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2SharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkEndpointsNetworkMainCorePropagationB71504FB": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkEndpointsNetworkMainSegregatedPropagation126AD34C": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkEndpointsNetworkMainSharedAssociation32A1E778": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "NetworkEndpointsNetworkMainSharedPropagationB52F1A2C": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkEndpointsToSecondaryVpcPeering08A08BA2": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkSecondaryidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NetworkEndpointsToSecondary",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NetworkEndpointsacceleratorBlockGroupRuleGroupAssociation1AF8FC15": {
      "Properties": {
        "FirewallRuleGroupId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverfirewallruleGroupsacceleratorblockgroupidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Priority": 101,
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::FirewallRuleGroupAssociation",
    },
    "NetworkEndpointsacceleratorQueryLogsCwlQueryLogAssociationEA44BB29": {
      "Properties": {
        "ResolverQueryLogConfigId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsacceleratorquerylogscwlidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "ResourceId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
    },
    "NetworkEndpointsacceleratorQueryLogsS3QueryLogAssociationC248D059": {
      "Properties": {
        "ResolverQueryLogConfigId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsacceleratorquerylogss3idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "ResourceId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
    },
    "NetworkEndpointsappAalbtg176E11B7D": {
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "HTTP",
        "Matcher": {},
        "Name": "appA-alb-tg-1",
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "Name",
            "Value": "appA-alb-tg-1",
          },
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "NetworkEndpointsappAnlbtg19C910FB9": {
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "TCP",
        "Matcher": {},
        "Name": "appA-nlb-tg-1",
        "Port": 80,
        "Protocol": "TCP",
        "Tags": [
          {
            "Key": "Name",
            "Value": "appA-nlb-tg-1",
          },
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "NetworkEndpointsappAnlbtg2EE7F2886": {
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "TCP",
        "Matcher": {},
        "Name": "appA-nlb-tg-2",
        "Port": 80,
        "Protocol": "TCP",
        "Tags": [
          {
            "Key": "Name",
            "Value": "appA-nlb-tg-2",
          },
        ],
        "TargetType": "ip",
        "Targets": {
          "Fn::GetAtt": [
            "appAnlbtg2ipLookupB24081DE",
            "ipAddresses",
          ],
        },
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "NetworkEndpointsexampleRuleRuleAssociationB302A795": {
      "Properties": {
        "ResolverRuleId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverrulesexampleruleidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VPCId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::ResolverRuleAssociation",
    },
    "NetworkInspectionNetworkMainCorePropagation37D40A21": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkInspectionNetworkMainSegregatedPropagationA07EB35C": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkInspectionNetworkMainSharedAssociationC5D467EA": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "NetworkInspectionNetworkMainSharedPropagation9C8183A3": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkInspectionTransitGatewayConnectAttachmentNetworkInspectionTransitGatewayConnectAD31631B": {
      "Properties": {
        "Options": {
          "Protocol": "gre",
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": "CentralInspection",
          },
          {
            "Key": "Name",
            "Value": "Network-Inspection",
          },
        ],
        "TransportTransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayConnect",
    },
    "NetworkInspectiondeployedtg2898BDF56": {
      "Properties": {
        "HealthCheckEnabled": true,
        "Matcher": {},
        "Name": "deployed-tg-2",
        "Port": 443,
        "Protocol": "HTTPS",
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployed-tg-2",
          },
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "NetworkInspectiontgwithouttargetip9ED227FD": {
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "HTTP",
        "Matcher": {},
        "Name": "tg-without-target-ip",
        "Port": 80,
        "Protocol": "HTTP",
        "ProtocolVersion": "HTTP1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "tg-without-target-ip",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "NetworkInspectiontgwithtargetipB51306E1": {
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "HTTP",
        "Matcher": {},
        "Name": "tg-with-target-ip",
        "Port": 80,
        "Protocol": "HTTP",
        "ProtocolVersion": "HTTP1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "tg-with-target-ip",
          },
        ],
        "TargetType": "ip",
        "Targets": [
          {
            "Id": "10.3.100.20",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "NetworkMain2Core101000016NetworkEndpointsNetworkStaticRouteE97CED2D": {
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/16",
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpoints2idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2CoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMain2Core111132blackholeStaticRoute0ADA733D": {
      "Properties": {
        "Blackhole": true,
        "DestinationCidrBlock": "1.1.1.1/32",
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2CoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMain2CoreacceleratorPrefixListNetworkEndpointsNetworkBB01BDA8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomTransitGatewayPrefixListReferenceCustomResourceProviderLogGroupBC9F3669",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3",
            "Arn",
          ],
        },
        "prefixListReference": {
          "PrefixListId": {
            "Ref": "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "TransitGatewayAttachmentId": {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpoints2idC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "TransitGatewayRouteTableId": {
            "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMain2routeTablesNetworkMain2CoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
      },
      "Type": "Custom::TransitGatewayPrefixListReference",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkMainCore0NetworkEndpointsNetworkStaticRoute554C10A2": {
      "Properties": {
        "DestinationCidrBlock": "::/0",
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainCore101000016NetworkEndpointsNetworkStaticRouteEC325B8C": {
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/16",
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainCore102000016NetworkDXGWStaticRoute7BFECA73": {
      "Properties": {
        "DestinationCidrBlock": "10.200.0.0/16",
        "TransitGatewayAttachmentId": {
          "Fn::GetAtt": [
            "NetworkDxgwNetworkMainDxGatewayAssociationF3E8BC9A",
            "TransitGatewayAttachmentId",
          ],
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainCore10300016acceleratorvpnStaticRoute1A702C47": {
      "Properties": {
        "DestinationCidrBlock": "10.30.0.0/16",
        "TransitGatewayAttachmentId": {
          "Ref": "AcceleratorVpnVpnTransitGatewayAttachmentFBF8EE77",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainCore111132blackholeStaticRouteEF8CDB96": {
      "Properties": {
        "Blackhole": true,
        "DestinationCidrBlock": "1.1.1.1/32",
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainCoreacceleratorPrefixListNetworkEndpointsNetwork3EFFBC42": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomTransitGatewayPrefixListReferenceCustomResourceProviderLogGroupBC9F3669",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3",
            "Arn",
          ],
        },
        "prefixListReference": {
          "PrefixListId": {
            "Ref": "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "TransitGatewayAttachmentId": {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "TransitGatewayRouteTableId": {
            "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
      },
      "Type": "Custom::TransitGatewayPrefixListReference",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkMainCorefd008blackholeStaticRoute2581AB5F": {
      "Properties": {
        "Blackhole": true,
        "DestinationCidrBlock": "fd00::/8",
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainShared102000016NetworkMainAndSharedServicesMainPeeringStaticRoute6433AEC2": {
      "Properties": {
        "DestinationCidrBlock": "10.200.0.0/16",
        "TransitGatewayAttachmentId": {
          "Ref": "NetworkNetworkMainAndSharedServicesMainPeeringTransitGatewayPeeringAttachment6A5D4528",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkNetworkMainAndSharedServicesMainPeeringTransitGatewayPeeringAttachment6A5D4528": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetTransitGatewayAttachmentCustomResourceProviderLogGroup41699CF3",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354",
            "Arn",
          ],
        },
        "name": "Network-Main-And-SharedServices-Main-Peering",
        "region": "us-east-1",
        "transitGatewayId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "type": "peering",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetTransitGatewayAttachment",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkSecondaryTestNacl105EgressNaclRuleA32FBE84": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetIpamSubnetCidrCustomResourceProviderLogGroup655A9FB7",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-GetIpamCidrRole",
            ],
          ],
        },
        "ssmSubnetIdPath": "/accelerator/network/vpc/SharedServices-Ipam-East/subnet/SharedServices-A/id",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetIpamSubnetCidr",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkSecondaryTestNacl105IngressNaclRule02EE83A1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetIpamSubnetCidrCustomResourceProviderLogGroup655A9FB7",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-GetIpamCidrRole",
            ],
          ],
        },
        "ssmSubnetIdPath": "/accelerator/network/vpc/SharedServices-Ipam-East/subnet/SharedServices-A/id",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetIpamSubnetCidr",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkSecondaryTestNacl106EgressNaclRule04845A6D": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetIpamSubnetCidrCustomResourceProviderLogGroup655A9FB7",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-GetIpamCidrRole",
            ],
          ],
        },
        "ssmSubnetIdPath": "/accelerator/network/vpc/SharedServices-Ipam-West/subnet/SharedServices-A/id",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetIpamSubnetCidr",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkSecondaryTestNacl106IngressNaclRuleCBC09801": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetIpamSubnetCidrCustomResourceProviderLogGroup655A9FB7",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-GetIpamCidrRole",
            ],
          ],
        },
        "ssmSubnetIdPath": "/accelerator/network/vpc/SharedServices-Ipam-West/subnet/SharedServices-A/id",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetIpamSubnetCidr",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkSecondaryTestNaclinbound4": {
      "Properties": {
        "CidrBlock": {
          "Fn::GetAtt": [
            "NetworkSecondaryTestNacl105IngressNaclRule02EE83A1",
            "ipv4CidrBlock",
          ],
        },
        "Egress": false,
        "NetworkAclId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkSecondarynetworkAclTestNaclidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "PortRange": {
          "From": -1,
          "To": -1,
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 105,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NetworkSecondaryTestNaclinbound5": {
      "Properties": {
        "CidrBlock": {
          "Fn::GetAtt": [
            "NetworkSecondaryTestNacl106IngressNaclRuleCBC09801",
            "ipv4CidrBlock",
          ],
        },
        "Egress": false,
        "NetworkAclId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkSecondarynetworkAclTestNaclidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "PortRange": {
          "From": -1,
          "To": -1,
        },
        "Protocol": -1,
        "RuleAction": "deny",
        "RuleNumber": 106,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NetworkSecondaryTestNacloutbound4": {
      "Properties": {
        "CidrBlock": {
          "Fn::GetAtt": [
            "NetworkSecondaryTestNacl105EgressNaclRuleA32FBE84",
            "ipv4CidrBlock",
          ],
        },
        "Egress": true,
        "NetworkAclId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkSecondarynetworkAclTestNaclidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "PortRange": {
          "From": -1,
          "To": -1,
        },
        "Protocol": -1,
        "RuleAction": "allow",
        "RuleNumber": 105,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NetworkSecondaryTestNacloutbound5": {
      "Properties": {
        "CidrBlock": {
          "Fn::GetAtt": [
            "NetworkSecondaryTestNacl106EgressNaclRule04845A6D",
            "ipv4CidrBlock",
          ],
        },
        "Egress": true,
        "NetworkAclId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkSecondarynetworkAclTestNaclidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "PortRange": {
          "From": -1,
          "To": -1,
        },
        "Protocol": -1,
        "RuleAction": "deny",
        "RuleNumber": 106,
      },
      "Type": "AWS::EC2::NetworkAclEntry",
    },
    "NetworkSecondarynetworkLocalEndpointQueryLogsCwlQueryLogAssociation93B2790B": {
      "Properties": {
        "ResolverQueryLogConfigId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsnetworklocalendpointquerylogscwlidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "ResourceId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkSecondaryidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
    },
    "NetworkSecondarynetworkLocalEndpointQueryLogsS3QueryLogAssociation35881457": {
      "Properties": {
        "ResolverQueryLogConfigId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsnetworklocalendpointquerylogss3idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "ResourceId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkSecondaryidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
    },
    "NonTemplateIpamCrossRegionSameAccountVpcPeeringA14D6550": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParamLookupNonTemplateIpamCrossRegionSameAccount555555555555usWest2C61E117A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NonTemplate-Ipam-Cross-Region-Same-Account",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NonTemplateIpamCrossRegionSameAccountVpcPeeringNetworkNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToNetworkIpamWestBFBE2082": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkNonTemplateIpamWest555555555555E5A02EBF",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateIpamCrossRegionSameAccountVpcPeeringA14D6550",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NonTemplateIpamCrossRegionSameAccountVpcPeeringNetworkNonTemplateIpamWestVpcNetworkNonTemplateIpamPublicWestRouteTablePeeringRouteToNetworkIpamCentralEAEEDDBA": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkNonTemplateIpamWest555555555555NetworkNonTemplateIpamPublicWest83D565C3",
          },
          "VpcPeeringConnectionId": {
            "Ref": "NonTemplateIpamCrossRegionSameAccountVpcPeeringA14D6550",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "NonTemplateIpamSameRegionCrossAccountVpcPeering4DF058EE": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupNonTemplateIpamSameRegionCrossAccount444444444444usEast139EC9865",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NonTemplate-Ipam-Same-Region-Cross-Account",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NonTemplateIpamSameRegionCrossAccountVpcPeeringNetworkNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSharedServicesIpam641F3982": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupSharedServicesNonTemplateIpamCentral444444444444EB42EB71",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateIpamSameRegionCrossAccountVpcPeering4DF058EE",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NonTemplateIpamSameRegionCrossAccountVpcPeeringSharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToNetworkIpamCentralFD8B2311": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesNonTemplateIpamCentral444444444444NetworkNonTemplateIpamPublic4A56D994",
          },
          "VpcPeeringConnectionId": {
            "Ref": "NonTemplateIpamSameRegionCrossAccountVpcPeering4DF058EE",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "NonTemplateStaticCrossRegionSameAccountVpcPeering8606AD0B": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParamLookupNonTemplateStaticCrossRegionSameAccount555555555555usWest232C511BD",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NonTemplate-Static-Cross-Region-Same-Account",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NonTemplateStaticCrossRegionSameAccountVpcPeeringNetworkNonTemplateStaticCentralVpcNetworkNonTemplateStaticPublicRouteTablePeeringRouteToNetworkStaticWestB7265FD7": {
      "Properties": {
        "DestinationCidrBlock": "172.18.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticCentralrouteTableNetworkNonTemplateStaticPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateStaticCrossRegionSameAccountVpcPeering8606AD0B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NonTemplateStaticCrossRegionSameAccountVpcPeeringNetworkNonTemplateStaticWestVpcNetworkNonTemplateStaticPublicWestRouteTablePeeringRouteToNetworkStaticCentral9E42D25C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "routeDefinition": {
          "DestinationCidrBlock": "172.17.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkNonTemplateStaticWest555555555555NetworkNonTemplateStaticPublicWest1781BEE4",
          },
          "VpcPeeringConnectionId": {
            "Ref": "NonTemplateStaticCrossRegionSameAccountVpcPeering8606AD0B",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "NonTemplateStaticSameRegionCrossAccountVpcPeering55F5C86E": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupNonTemplateStaticSameRegionCrossAccount444444444444usEast1B6DE8B93",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NonTemplate-Static-Same-Region-Cross-Account",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NonTemplateStaticSameRegionCrossAccountVpcPeeringNetworkNonTemplateStaticCentralVpcNetworkNonTemplateStaticPublicRouteTablePeeringRouteToSharedServicesStaticC567A928": {
      "Properties": {
        "DestinationCidrBlock": "172.19.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticCentralrouteTableNetworkNonTemplateStaticPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateStaticSameRegionCrossAccountVpcPeering55F5C86E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NonTemplateStaticSameRegionCrossAccountVpcPeeringSharedServicesNonTemplateStaticCentralVpcNetworkNonTemplateStaticPublicRouteTablePeeringRouteToNetworkStaticCentralD8B445A5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "172.17.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesNonTemplateStaticCentral444444444444NetworkNonTemplateStaticPublic6C808DFF",
          },
          "VpcPeeringConnectionId": {
            "Ref": "NonTemplateStaticSameRegionCrossAccountVpcPeering55F5C86E",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "ShareSubnetTagsSharedServicesSharedServicesAppC062D4D03": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomShareSubnetTagsCustomResourceProviderLogGroupA1F3F80A",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC",
            "Arn",
          ],
        },
        "acceleratorSsmParamPrefix": "/accelerator",
        "sharedSubnetId": {
          "Ref": "SharedServicesMainSharedServicesAppCSubnetE0D5A73C",
        },
        "sharedSubnetName": "SharedServices-App-C",
        "subnetTags": [
          {
            "key": "Name",
            "value": "SharedServices-App-C",
          },
        ],
        "vpcName": "SharedServices-Main",
        "vpcTags": [
          {
            "key": "Name",
            "value": "SharedServices-Main",
          },
        ],
      },
      "Type": "Custom::ShareSubnetTags",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainNetworkMainCorePropagationB8A9444B": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "SharedServicesMainNetworkMainSegregatedPropagation1734E165": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "SharedServicesMainNetworkMainSharedAssociationFE2C7420": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "SharedServicesMainNetworkMainSharedPropagationA83F55E7": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "SharedServicesMainSharedServicesAppCSubnetE0D5A73C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetResourceShareItemCustomResourceProviderLogGroup6DB08FC0",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B",
            "Arn",
          ],
        },
        "resourceOwner": "OTHER-ACCOUNTS",
        "resourceShareArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ram:us-east-1:444444444444:resource-share/",
              {
                "Ref": "SharedServicesMainSharedServicesAppCSubnetShare33CA4D7C",
              },
            ],
          ],
        },
        "resourceType": "ec2:Subnet",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetResourceShareItem",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainSharedServicesAppCSubnetShare33CA4D7C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetResourceShareCustomResourceProviderHandler5DB0EF7A",
            "Arn",
          ],
        },
        "name": "SharedServices-App-C_SubnetShare",
        "owningAccountId": "444444444444",
        "resourceOwner": "OTHER-ACCOUNTS",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetResourceShare",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetTransitGatewayAttachmentCustomResourceProviderLogGroup41699CF3",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354",
            "Arn",
          ],
        },
        "name": "SharedServices-Main",
        "region": "us-east-1",
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-DescribeTgwAttachRole-us-east-1",
            ],
          ],
        },
        "transitGatewayId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "type": "vpc",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetTransitGatewayAttachment",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainVpcSharedServicesMainRsyslogSgSg82BD8A5A": {
      "Properties": {
        "GroupDescription": "Security Group for AWS Accelerator rsyslog",
        "GroupName": "SharedServices-Main-Rsyslog-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "All Outbound",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "allow inbound traffic",
            "FromPort": 514,
            "IpProtocol": "tcp",
            "ToPort": 514,
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "allow inbound traffic",
            "FromPort": 514,
            "IpProtocol": "udp",
            "ToPort": 514,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "SharedServices-Main-Rsyslog-sg",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-555555555555-us-east-1/version",
        "Type": "String",
        "Value": "1.11.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamCrossAccountVpcPeering03403783": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/CrossAccount/id",
        "Type": "String",
        "Value": {
          "Ref": "CrossAccountVpcPeering9E0C69A2",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamLookupCrossAccount444444444444usEast13BE87606": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-Main/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateIpamWest555555555555E5A02EBF": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/cidr/ipv4",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateIpamWest555555555555NetworkNonTemplateIpamPublicWest83D565C3": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/routeTable/Network-NonTemplate-Ipam-Public-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateStaticWest555555555555NetworkNonTemplateStaticPublicWest1781BEE4": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-West/routeTable/Network-NonTemplate-Static-Public-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNonTemplateIpamCrossRegionSameAccount555555555555usWest2C61E117A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNonTemplateIpamSameRegionCrossAccount444444444444usEast139EC9865": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNonTemplateStaticCrossRegionSameAccount555555555555usWest232C511BD": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNonTemplateStaticSameRegionCrossAccount444444444444usEast1B6DE8B93": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-NonTemplate-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesMain444444444444SharedServicesAppA08A11B17": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-App-A/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesMain444444444444SharedServicesAppB580D7687": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-App-B/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesMain444444444444SharedServicesAppCCD1A1D60": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-App-C/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesNonTemplateIpamCentral444444444444EB42EB71": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesNonTemplateIpamCentral444444444444NetworkNonTemplateIpamPublic4A56D994": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central/routeTable/Network-NonTemplate-Ipam-Public/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesNonTemplateStaticCentral444444444444NetworkNonTemplateStaticPublic6C808DFF": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-NonTemplate-Static-Central/routeTable/Network-NonTemplate-Static-Public/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterSameOuCrossRegionIpam555555555555usWest2818AF480": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterSameOuCrossRegionStatic555555555555usWest27D74F78B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterSameOuHalfCrossRegionIpam555555555555usWest2E402777D": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterSameOuHalfCrossRegionStatic555555555555usWest2B28463E7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamNetworkEndpointsToSecondaryVpcPeeringED109890": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NetworkEndpointsToSecondary/id",
        "Type": "String",
        "Value": {
          "Ref": "NetworkEndpointsToSecondaryVpcPeering08A08BA2",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamNonTemplateIpamCrossRegionSameAccountVpcPeeringC6722B1C": {
      "DependsOn": [
        "SsmParamNonTemplateStaticSameRegionCrossAccountVpcPeeringFCCF586D",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NonTemplate-Ipam-Cross-Region-Same-Account/id",
        "Type": "String",
        "Value": {
          "Ref": "NonTemplateIpamCrossRegionSameAccountVpcPeeringA14D6550",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamNonTemplateIpamSameRegionCrossAccountVpcPeeringA00B09C5": {
      "DependsOn": [
        "SsmParamNonTemplateStaticSameRegionCrossAccountVpcPeeringFCCF586D",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NonTemplate-Ipam-Same-Region-Cross-Account/id",
        "Type": "String",
        "Value": {
          "Ref": "NonTemplateIpamSameRegionCrossAccountVpcPeering4DF058EE",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamNonTemplateStaticCrossRegionSameAccountVpcPeering386D0E61": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NonTemplate-Static-Cross-Region-Same-Account/id",
        "Type": "String",
        "Value": {
          "Ref": "NonTemplateStaticCrossRegionSameAccountVpcPeering8606AD0B",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamNonTemplateStaticSameRegionCrossAccountVpcPeeringFCCF586D": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NonTemplate-Static-Same-Region-Cross-Account/id",
        "Type": "String",
        "Value": {
          "Ref": "NonTemplateStaticSameRegionCrossAccountVpcPeering55F5C86E",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamSharedServicesMainSharedServicesMainRsyslogSgSecurityGroupFCDC7FBA": {
      "DependsOn": [
        "SsmParamTemplateRequesterSameOuHalfCrossRegionIpamVpcPeering8DEF3C15",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpc/SharedServices-Main/securityGroup/SharedServices-Main-Rsyslog-sg/id",
        "Type": "String",
        "Value": {
          "Ref": "SharedServicesMainVpcSharedServicesMainRsyslogSgSg82BD8A5A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-555555555555-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuCrossRegionIpamVpcPeeringB284C5EA": {
      "DependsOn": [
        "SsmParamTemplateRequesterSameOuCrossRegionStaticVpcPeeringE69A52BE",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Cross-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUCrossRegionIpamVpcPeering497DB0ED",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuCrossRegionStaticVpcPeeringE69A52BE": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Cross-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUCrossRegionStaticVpcPeering1A41D5E0",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuHalfCrossRegionIpamVpcPeering8DEF3C15": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Half-Cross-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUHalfCrossRegionIpamVpcPeeringEC3DF055",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuHalfCrossRegionStaticVpcPeeringB3E24EC5": {
      "DependsOn": [
        "SsmParamTemplateRequesterSameOuCrossRegionStaticVpcPeeringE69A52BE",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Half-Cross-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUHalfCrossRegionStaticVpcPeering22259852",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuHalfSameRegionIpamVpcPeeringCDED19B1": {
      "DependsOn": [
        "SsmParamTemplateRequesterSameOuCrossRegionStaticVpcPeeringE69A52BE",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Half-Same-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUHalfSameRegionIpamVpcPeering464501CF",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuHalfSameRegionStaticVpcPeeringF95F9410": {
      "DependsOn": [
        "SsmParamTemplateRequesterSameOuCrossRegionStaticVpcPeeringE69A52BE",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Half-Same-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUHalfSameRegionStaticVpcPeering05508F9E",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuSameRegionIpamVpcPeering3CA761B5": {
      "DependsOn": [
        "SsmParamNonTemplateStaticSameRegionCrossAccountVpcPeeringFCCF586D",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Same-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUSameRegionIpamVpcPeeringAA899B2E",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuSameRegionStaticVpcPeering0F9D06E7": {
      "DependsOn": [
        "SsmParamNonTemplateStaticSameRegionCrossAccountVpcPeeringFCCF586D",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Same-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUSameRegionStaticVpcPeeringEC4F2D73",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamWorkloadTemplateToNetworkEndpointsVpcPeeringA6E15753": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/WorkloadTemplateToNetworkEndpoints/id",
        "Type": "String",
        "Value": {
          "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "TemplateRequesterSameOUCrossRegionIpamVpcPeering497DB0ED": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterSameOuCrossRegionIpam555555555555usWest2818AF480",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUCrossRegionIpamVpcPeeringInfraTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToNetworkIpamWestCAD5D3FC": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkNonTemplateIpamWest555555555555E5A02EBF",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUCrossRegionIpamVpcPeering497DB0ED",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUCrossRegionStaticVpcPeering1A41D5E0": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterSameOuCrossRegionStatic555555555555usWest27D74F78B",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUCrossRegionStaticVpcPeeringInfraTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToNetworkStaticWest860870F1": {
      "Properties": {
        "DestinationCidrBlock": "172.18.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUCrossRegionStaticVpcPeering1A41D5E0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUHalfCrossRegionIpamVpcPeeringEC3DF055": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterSameOuHalfCrossRegionIpam555555555555usWest2E402777D",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Half-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUHalfCrossRegionIpamVpcPeeringInfraTemplateHalfIpamCentralVpcWorkloadARtRouteTablePeeringToNetworkIpamWest5BBA718F": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkNonTemplateIpamWest555555555555E5A02EBF",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUHalfCrossRegionIpamVpcPeeringEC3DF055",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUHalfCrossRegionStaticVpcPeering22259852": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterSameOuHalfCrossRegionStatic555555555555usWest2B28463E7",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Half-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUHalfCrossRegionStaticVpcPeeringInfraTemplateHalfStaticCentralVpcWorkloadARtRouteTablePeeringToNetworkStaticWest3B64DBA0": {
      "Properties": {
        "DestinationCidrBlock": "172.18.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUHalfCrossRegionStaticVpcPeering22259852",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUHalfSameRegionIpamVpcPeering464501CF": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Half-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUHalfSameRegionIpamVpcPeeringInfraTemplateHalfIpamCentralVpcWorkloadARtRouteTablePeeringToNetworkIpamCentral9202D3B2": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUHalfSameRegionIpamVpcPeering464501CF",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUHalfSameRegionIpamVpcPeeringNetworkNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToInfraTemplateHalfIpamC2108F07": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUHalfSameRegionIpamVpcPeering464501CF",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUHalfSameRegionStaticVpcPeering05508F9E": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Half-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUHalfSameRegionStaticVpcPeeringInfraTemplateHalfStaticCentralVpcWorkloadARtRouteTablePeeringToNetworkStaticCentral05412D33": {
      "Properties": {
        "DestinationCidrBlock": "172.17.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUHalfSameRegionStaticVpcPeering05508F9E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUSameRegionIpamVpcPeeringAA899B2E": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUSameRegionIpamVpcPeeringInfraTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToNetworkIpamCentral905CD683": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUSameRegionIpamVpcPeeringAA899B2E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUSameRegionIpamVpcPeeringNetworkNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToInfraTemplateFullIpamDF3D8412": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUSameRegionIpamVpcPeeringAA899B2E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUSameRegionStaticVpcPeeringEC4F2D73": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUSameRegionStaticVpcPeeringInfraTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToNetworkStaticCentral41CA8234": {
      "Properties": {
        "DestinationCidrBlock": "172.17.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUSameRegionStaticVpcPeeringEC4F2D73",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WorkloadTemplateToNetworkEndpoints",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplateidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeeringNetworkEndpointsVpcNetworkEndpointsARouteTablePeeringRouteToWorkloadTemplate18B85C31": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplatecidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsAidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeeringNetworkEndpointsVpcNetworkEndpointsBRouteTablePeeringRouteToWorkloadTemplate2A3384CF": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplatecidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsBidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeeringWorkloadTemplateVpcWorkloadARtRouteTablePeeringRouteToNetworkEndpointsA455931E": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointscidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplaterouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeeringWorkloadTemplateVpcWorkloadBRtRouteTablePeeringRouteToNetworkEndpoints3AE45A7C": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointscidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplaterouteTableWorkloadBRtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "appAnlbtg2ipLookupB24081DE": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaLogGroup713C77F0",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderframeworkonEvent694CD713",
            "Arn",
          ],
        },
        "assumeRoleName": "AWSAccelerator-GetNLBIPAddressLookup",
        "partition": {
          "Ref": "AWS::Partition",
        },
        "region": "us-east-1",
        "targets": [
          {
            "account": "555555555555",
            "nlbName": "appA-nlb-01",
            "region": "us-east-1",
          },
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaEF941FA2": {
      "DependsOn": [
        "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaServiceRoleDefaultPolicyD488029A",
        "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaServiceRole92332B48",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaServiceRole92332B48",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaLogGroup713C77F0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaEF941FA2",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaServiceRole92332B48": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Custom resource provider framework-role created by cdk.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaServiceRoleDefaultPolicyD488029A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator-GetNLBIPAddressLookup",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaServiceRoleDefaultPolicyD488029A",
        "Roles": [
          {
            "Ref": "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaServiceRole92332B48",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderframeworkonEvent694CD713": {
      "DependsOn": [
        "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderframeworkonEventServiceRoleDefaultPolicy60AF00B7",
        "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderframeworkonEventServiceRoleA31E553B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-555555555555-us-east-1/appA-nlb-tg-2-ipLookup/appA-nlb-tg-2-ipLookupProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaEF941FA2",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderframeworkonEventServiceRoleA31E553B",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderframeworkonEventServiceRoleA31E553B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Custom resource provider framework-role created by cdk.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderframeworkonEventServiceRoleDefaultPolicy60AF00B7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaEF941FA2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderLambdaEF941FA2",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderframeworkonEventServiceRoleDefaultPolicy60AF00B7",
        "Roles": [
          {
            "Ref": "appAnlbtg2ipLookupappAnlbtg2ipLookupProviderframeworkonEventServiceRoleA31E553B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`NetworkAssociationsStack Construct(NetworkAssociationsStack):  Snapshot Test 2`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlist001idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/prefixList/accelerator-prefix-list-001/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/prefixList/accelerator-prefix-list/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistipv6idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/prefixList/accelerator-prefix-list-ipv6/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/SharedServices-Main/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainpeeringNetworkMainAndSharedServicesMainPeeringidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/SharedServices-Main/peering/Network-Main-And-SharedServices-Main-Peering/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainrouteTablesSharedServicesMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/SharedServices-Main/routeTables/SharedServices-Main-Core/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainrouteTablesSharedServicesMainSegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/SharedServices-Main/routeTables/SharedServices-Main-Segregated/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainrouteTablesSharedServicesMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/SharedServices-Main/routeTables/SharedServices-Main-Shared/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainrouteTablesSharedServicesMainStandaloneidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/SharedServices-Main/routeTables/SharedServices-Main-Standalone/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainrouteTablesSharedServicesMainTest01idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/SharedServices-Main/routeTables/SharedServices-Main-Test01/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesSecondaryTgwidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/SharedServices-SecondaryTgw/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesIpamEastidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Ipam-East/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesIpamEastrouteTableSharedServicesARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Ipam-East/routeTable/SharedServices-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesIpamEastrouteTableSharedServicesBRtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Ipam-East/routeTable/SharedServices-B-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainrouteTableSharedServicesAppAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-App-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainrouteTableSharedServicesAppBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-App-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainrouteTableSharedServicesAppCidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-App-C/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainrouteTableSharedServicesMainDefaultidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-Main-Default/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainrouteTableSharedServicesTgwAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-Tgw-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainrouteTableSharedServicesTgwBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-Tgw-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentral2cidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central-2/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentral2idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central-2/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentral2routeTableNetworkNonTemplateIpamPublic2idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central-2/routeTable/Network-NonTemplate-Ipam-Public-2/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central/routeTable/Network-NonTemplate-Ipam-Public/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentral2idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Static-Central-2/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentral2routeTableNetworkNonTemplateStaticPublic2idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Static-Central-2/routeTable/Network-NonTemplate-Static-Public-2/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Static-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralrouteTableNetworkNonTemplateStaticPublicidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Static-Central/routeTable/Network-NonTemplate-Static-Public/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesappVpcidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-appVpc/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesappVpcrouteTableSharedServicesappVpcPrivRtAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-appVpc/routeTable/SharedServices-appVpc-PrivRtA/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesappVpcrouteTableSharedServicesappVpcPrivRtBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-appVpc/routeTable/SharedServices-appVpc-PrivRtB/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesappVpcrouteTableSharedServicesappVpcPublicRouteAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-appVpc/routeTable/SharedServices-appVpc-PublicRouteA/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesappVpcrouteTableSharedServicesappVpcPublicRouteBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-appVpc/routeTable/SharedServices-appVpc-PublicRouteB/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcWorkloadTemplatecidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Workload-Template/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcWorkloadTemplateidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Workload-Template/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcWorkloadTemplaterouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Workload-Template/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcWorkloadTemplaterouteTableWorkloadBRtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Workload-Template/routeTable/Workload-B-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiwindowslatestWindowsServer2016EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
            "Arn",
          ],
        },
        "directoryId": {
          "Ref": "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        },
        "logGroupName": {
          "Ref": "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        },
      },
      "Type": "Custom::ActiveDirectoryLogSubscription",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Manage active directory log subscription handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "CDK created IAM service role entity.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ds:ListLogSubscriptions",
                "ds:CreateLogSubscription",
                "ds:DeleteLogSubscription",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "LogSubscription",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "toryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK created IAM user, role, or group.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1/AcceleratorManagedActiveDirectoryActiveDirectory/AcceleratorManagedActiveDirectoryLogSubscription/ManageActiveDirectoryLogSubscriptionProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK created IAM user, role, or group.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "CDK created IAM service role entity.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "anagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/aws/directoryservice/AcceleratorManagedActiveDirectory",
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25": {
      "Properties": {
        "PolicyDocument": {
          "Fn::Join": [
            "",
            [
              "{"Statement":[{"Action":["logs:CreateLogStream","logs:PutLogEvents"],"Effect":"Allow","Principal":{"Service":"ds.amazonaws.com"},"Resource":"",
              {
                "Fn::GetAtt": [
                  "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
                  "Arn",
                ],
              },
              ""}],"Version":"2012-10-17"}",
            ],
          ],
        },
        "PolicyName": "AWSAcceleratorNetworkAssociationsStack444444444444useast1AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicy99919821",
      },
      "Type": "AWS::Logs::ResourcePolicy",
    },
    "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96": {
      "Properties": {
        "Edition": "Standard",
        "Name": "example.com",
        "Password": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002:SecretString:::}}",
            ],
          ],
        },
        "ShortName": "example",
        "VpcSettings": {
          "SubnetIds": [
            {
              "Ref": "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookup42366BF1",
            },
            {
              "Ref": "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookup4A162155",
            },
          ],
          "VpcId": {
            "Ref": "AcceleratorManagedActiveDirectoryVpcLookup37FD07B8",
          },
        },
      },
      "Type": "AWS::DirectoryService::MicrosoftAD",
    },
    "AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryInstanceC1502B8C": {
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT30M",
        },
      },
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
      ],
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "config": [
              "setup",
              "join",
              "installRDS",
              "createADConnectorUser",
              "configurePasswordPolicy",
              "finalize",
            ],
          },
          "configurePasswordPolicy": {
            "commands": {
              "a-set-password-policy": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -ExecutionPolicy RemoteSigned C:\\cfn\\scripts\\Configure-password-policy.ps1 -DomainAdminUser admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString) -ComplexityEnabled:$True -LockoutDuration 00:30:00 -LockoutObservationWindow 00:30:00 -LockoutThreshold 6 -MaxPasswordAge:90.00:00:00 -MinPasswordAge:1.00:00:00 -MinPasswordLength:14 -PasswordHistoryCount:24 -ReversibleEncryptionEnabled:$false",
                    ],
                  ],
                },
                "waitAfterCompletion": "0",
              },
            },
          },
          "createADConnectorUser": {
            "commands": {
              "a-create-ad-users": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -ExecutionPolicy RemoteSigned C:\\cfn\\scripts\\AD-user-setup.ps1 -UserName adconnector-user-01 -Password ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/adconnector-user-01).SecretString) -DomainAdminUser example\\admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString) -PasswordNeverExpires Yes -UserEmailAddress example-adconnector-user@example.com; C:\\cfn\\scripts\\AD-user-setup.ps1 -UserName user1-01 -Password ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/user1-01).SecretString) -DomainAdminUser example\\admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString) -PasswordNeverExpires Yes -UserEmailAddress example-user1@example.com; C:\\cfn\\scripts\\AD-user-setup.ps1 -UserName user2-002 -Password ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/user2-002).SecretString) -DomainAdminUser example\\admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString) -PasswordNeverExpires Yes -UserEmailAddress example-user2@example.com; C:\\cfn\\scripts\\AD-user-setup.ps1 -UserName admin -Password ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString) -DomainAdminUser example\\admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString) -PasswordNeverExpires Yes",
                    ],
                  ],
                },
                "waitAfterCompletion": "0",
              },
              "b-create-ad-groups": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -ExecutionPolicy RemoteSigned C:\\cfn\\scripts\\AD-group-setup.ps1 -GroupNames 'aws-Provisioning,aws-Billing,aws-Management-Admin,aws-LogArchive-Admin,aws-SharedServices-Admin,aws-Network-Admin,aws-GovCloudWorkloadAccount01-Admin,aws-Management-PowerUser,aws-LogArchive-PowerUser,aws-SharedServices-PowerUser,aws-Network-PowerUser,aws-GovCloudWorkloadAccount01-PowerUser,aws-Management-View,aws-LogArchive-View,aws-SharedServices-View,aws-Network-View,aws-GovCloudWorkloadAccount01-View,ADConnector-grp' -DomainAdminUser example\\admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString)",
                    ],
                  ],
                },
                "waitAfterCompletion": "0",
              },
              "c-configure-ad-users-groups": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -ExecutionPolicy RemoteSigned C:\\cfn\\scripts\\AD-user-group-setup.ps1 -GroupNames 'ADConnector-grp' -UserName adconnector-user-01 -DomainAdminUser example\\admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString); C:\\cfn\\scripts\\AD-user-group-setup.ps1 -GroupNames 'aws-Provisioning,aws-Management-View,aws-LogArchive-View,aws-SharedServices-View,aws-Network-View,aws-GovCloudWorkloadAccount01-View,aws-Management-Admin,aws-LogArchive-Admin,aws-SharedServices-Admin,aws-Network-Admin,aws-GovCloudWorkloadAccount01-Admin,aws-Management-PowerUser,aws-LogArchive-PowerUser,aws-SharedServices-PowerUser,aws-Network-PowerUser,aws-GovCloudWorkloadAccount01-PowerUser,AWS Delegated Administrators' -UserName user1-01 -DomainAdminUser example\\admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString); C:\\cfn\\scripts\\AD-user-group-setup.ps1 -GroupNames 'aws-Provisioning,aws-Management-View,aws-LogArchive-View,aws-SharedServices-View,aws-Network-View,aws-GovCloudWorkloadAccount01-View' -UserName user2-002 -DomainAdminUser example\\admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString)",
                    ],
                  ],
                },
                "waitAfterCompletion": "0",
              },
              "d-configure-ad-group-permissions": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -ExecutionPolicy RemoteSigned C:\\cfn\\scripts\\AD-connector-permissions-setup.ps1 -GroupName ADConnector-grp -DomainAdminUser example\\admin -DomainAdminPassword ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString)",
                    ],
                  ],
                },
                "waitAfterCompletion": "0",
              },
            },
          },
          "finalize": {
            "commands": {
              "1-signal-success": {
                "command": "powershell.exe -Command "Write-AWSQuickStartStatus"",
                "waitAfterCompletion": "0",
              },
            },
          },
          "installRDS": {
            "commands": {
              "a-install-rds": {
                "command": "powershell.exe -Command "Install-WindowsFeature RSAT-RDS-Gateway,RSAT-AD-Tools"",
                "waitAfterCompletion": "0",
              },
            },
          },
          "join": {
            "commands": {
              "a-join-domain": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command "C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName example.com -UserName example\\admin -Password ((Get-SECSecretValue -SecretId arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:us-east-1:222222222222:secret:/accelerator/ad-user/AcceleratorManagedActiveDirectory/my-admin-002).SecretString)"",
                    ],
                  ],
                },
                "waitAfterCompletion": "forever",
              },
            },
          },
          "setup": {
            "commands": {
              "a-set-execution-policy": {
                "command": "powershell.exe -Command "Set-ExecutionPolicy RemoteSigned -Force"",
                "waitAfterCompletion": "0",
              },
              "b-init-quickstart-module": {
                "command": "powershell.exe -Command "New-AWSQuickStartResourceSignal -Stack AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1  -Resource AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryInstanceC1502B8C -Region us-east-1"",
                "waitAfterCompletion": "0",
              },
            },
            "files": {
              "C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\AWSQuickStart\\AWSQuickStart.psm1": {
                "content": "function New-AWSQuickStartWaitHandle {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$true, ValueFromPipeline=$true)]
        [string]
        $Handle,

        [Parameter(Mandatory=$false)]
        [string]
        $Path = 'HKLM:\\SOFTWARE\\AWSQuickStart\\',

        [Parameter(Mandatory=$false)]
        [switch]
        $Base64Handle
    )

    try {
        $ErrorActionPreference = "Stop"

        Write-Verbose "Creating $Path"
        New-Item $Path -Force

        if ($Base64Handle) {
            Write-Verbose "Trying to decode handle Base64 string as UTF8 string"
            $decodedHandle = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($Handle))
            if ($decodedHandle -notlike "http*") {
                Write-Verbose "Now trying to decode handle Base64 string as Unicode string"
                $decodedHandle = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String($Handle))
            }
            Write-Verbose "Decoded handle string: $decodedHandle"
            $Handle = $decodedHandle
        }

        Write-Verbose "Creating Handle Registry Key"
        New-ItemProperty -Path $Path -Name Handle -Value $Handle -Force

        Write-Verbose "Creating ErrorCount Registry Key"
        New-ItemProperty -Path $Path -Name ErrorCount -Value 0 -PropertyType dword -Force
    }
    catch {
        Write-Verbose $_.Exception.Message
    }
}

function New-AWSQuickStartResourceSignal {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$true)]
        [string]
        $Stack,

        [Parameter(Mandatory=$true)]
        [string]
        $Resource,

        [Parameter(Mandatory=$true)]
        [string]
        $Region,

        [Parameter(Mandatory=$false)]
        [string]
        $Path = 'HKLM:\\SOFTWARE\\AWSQuickStart\\'
    )

    try {
        $ErrorActionPreference = "Stop"

        Write-Verbose "Creating $Path"
        New-Item $Path -Force

        Write-Verbose "Creating Stack Registry Key"
        New-ItemProperty -Path $Path -Name Stack -Value $Stack -Force

        Write-Verbose "Creating Resource Registry Key"
        New-ItemProperty -Path $Path -Name Resource -Value $Resource -Force

        Write-Verbose "Creating Region Registry Key"
        New-ItemProperty -Path $Path -Name Region -Value $Region -Force

        Write-Verbose "Creating ErrorCount Registry Key"
        New-ItemProperty -Path $Path -Name ErrorCount -Value 0 -PropertyType dword -Force
    }
    catch {
        Write-Verbose $_.Exception.Message
    }
}


function Get-AWSQuickStartErrorCount {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$false)]
        [string]
        $Path = 'HKLM:\\SOFTWARE\\AWSQuickStart\\'
    )

    process {
        try {
            Write-Verbose "Getting ErrorCount Registry Key"
            Get-ItemProperty -Path $Path -Name ErrorCount -ErrorAction Stop | Select-Object -ExpandProperty ErrorCount
        }
        catch {
            Write-Verbose $_.Exception.Message
        }
    }
}

function Set-AWSQuickStartErrorCount {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory, ValueFromPipeline=$true)]
        [int32]
        $Count,

        [Parameter(Mandatory=$false)]
        [string]
        $Path = 'HKLM:\\SOFTWARE\\AWSQuickStart\\'
    )

    process {
        try {
            $currentCount = Get-AWSQuickStartErrorCount
            $currentCount += $Count

            Write-Verbose "Creating ErrorCount Registry Key"
            Set-ItemProperty -Path $Path -Name ErrorCount -Value $currentCount -ErrorAction Stop
        }
        catch {
            Write-Verbose $_.Exception.Message
        }
    }
}

function Get-AWSQuickStartWaitHandle {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$false, ValueFromPipeline=$true)]
        [string]
        $Path = 'HKLM:\\SOFTWARE\\AWSQuickStart\\'
    )

    process {
        try {
            $ErrorActionPreference = "Stop"

            Write-Verbose "Getting Handle key value from $Path"
            $key = Get-ItemProperty $Path

            return $key.Handle
        }
        catch {
            Write-Verbose $_.Exception.Message
        }
    }
}

function Get-AWSQuickStartResourceSignal {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$false)]
        [string]
        $Path = 'HKLM:\\SOFTWARE\\AWSQuickStart\\'
    )

    try {
        $ErrorActionPreference = "Stop"

        Write-Verbose "Getting Stack, Resource, and Region key values from $Path"
        $key = Get-ItemProperty $Path
        $resourceSignal = @{
            Stack = $key.Stack
            Resource = $key.Resource
            Region = $key.Region
        }
        $toReturn = New-Object -TypeName PSObject -Property $resourceSignal

        if ($toReturn.Stack -and $toReturn.Resource -and $toReturn.Region) {
            return $toReturn
        } else {
            return $null
        }
    }
    catch {
        Write-Verbose $_.Exception.Message
    }
}

function Remove-AWSQuickStartWaitHandle {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$false, ValueFromPipeline=$true)]
        [string]
        $Path = 'HKLM:\\SOFTWARE\\AWSQuickStart\\'
    )

    process {
        try {
            $ErrorActionPreference = "Stop"

            Write-Verbose "Getting Handle key value from $Path"
            $key = Get-ItemProperty -Path $Path -Name Handle -ErrorAction SilentlyContinue

            if ($key) {
                Write-Verbose "Removing Handle key value from $Path"
                Remove-ItemProperty -Path $Path -Name Handle
            }
        }
        catch {
            Write-Verbose $_.Exception.Message
        }
    }
}

function Remove-AWSQuickStartResourceSignal {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$false)]
        [string]
        $Path = 'HKLM:\\SOFTWARE\\AWSQuickStart\\'
    )

    try {
        $ErrorActionPreference = "Stop"

        foreach ($keyName in @('Stack','Resource','Region')) {
            Write-Verbose "Getting Stack, Resource, and Region key values from $Path"
            $key = Get-ItemProperty -Path $Path -Name $keyName -ErrorAction SilentlyContinue

            if ($key) {
                Write-Verbose "Removing $keyName key value from $Path"
                Remove-ItemProperty -Path $Path -Name $keyName
            }
        }
    }
    catch {
        Write-Verbose $_.Exception.Message
    }
}

function Write-AWSQuickStartEvent {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory, ValueFromPipelineByPropertyName=$true)]
        [string]
        $Message,

        [Parameter(Mandatory=$false)]
        [string]
        $EntryType = 'Error'
    )

    process {
        Write-Verbose "Checking for AWSQuickStart Eventlog Source"
        if(![System.Diagnostics.EventLog]::SourceExists('AWSQuickStart')) {
            New-EventLog -LogName Application -Source AWSQuickStart -ErrorAction SilentlyContinue
        }
        else {
            Write-Verbose "AWSQuickStart Eventlog Source exists"
        }

        Write-Verbose "Writing message to application log"

        try {
            Write-EventLog -LogName Application -Source AWSQuickStart -EntryType $EntryType -EventId 1001 -Message $Message
        }
        catch {
            Write-Verbose $_.Exception.Message
        }
    }
}

function Write-AWSQuickStartException {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory, ValueFromPipeline=$true)]
        [System.Management.Automation.ErrorRecord]
        $ErrorRecord
    )

    process {
        try {
            Write-Verbose "Incrementing error count"
            Set-AWSQuickStartErrorCount -Count 1

            Write-Verbose "Getting total error count"
            $errorTotal = Get-AWSQuickStartErrorCount

            $errorMessage = "Command failure in {0} {1} on line {2} \`nException: {3}" -f $ErrorRecord.InvocationInfo.MyCommand.name,
                                                        $ErrorRecord.InvocationInfo.ScriptName, $ErrorRecord.InvocationInfo.ScriptLineNumber, $ErrorRecord.Exception.ToString()

            $CmdSafeErrorMessage = $errorMessage -replace '[^a-zA-Z0-9\\s\\.\\[\\]\\-,:_\\\\\\/\\(\\)]', ''
            if ($CmdSafeErrorMessage.length -gt 255) {
                $CmdSafeErrorMessage = $CmdSafeErrorMessage.substring(0,252) + '...'
            }

            $handle = Get-AWSQuickStartWaitHandle -ErrorAction SilentlyContinue
            if ($handle) {
                Invoke-Expression "cfn-signal.exe -e 1 --reason='$CmdSafeErrorMessage' '$handle'"
            } else {
                $resourceSignal = Get-AWSQuickStartResourceSignal -ErrorAction SilentlyContinue
                if ($resourceSignal) {
                    Invoke-Expression "cfn-signal.exe -e 1 --stack '$($resourceSignal.Stack)' --resource '$($resourceSignal.Resource)' --region '$($resourceSignal.Region)'"
                } else {
                    throw "No handle or stack/resource/region found in registry"
                }
            }
        }
        catch {
            Write-Verbose $_.Exception.Message
        }
        finally {
            Write-AWSQuickStartEvent -Message $errorMessage
            # throwing an exception to force cfn-init execution to stop
            throw $CmdSafeErrorMessage
        }
    }
}

function Write-AWSQuickStartStatus {
    [CmdletBinding()]
    Param()

    process {
        try {
            Write-Verbose "Checking error count"
            if((Get-AWSQuickStartErrorCount) -eq 0) {
                Write-Verbose "Getting Handle"
                $handle = Get-AWSQuickStartWaitHandle -ErrorAction SilentlyContinue
                if ($handle) {
                    Invoke-Expression "cfn-signal.exe -e 0 '$handle'"
                } else {
                    $resourceSignal = Get-AWSQuickStartResourceSignal -ErrorAction SilentlyContinue
                    if ($resourceSignal) {
                        Invoke-Expression "cfn-signal.exe -e 0 --stack '$($resourceSignal.Stack)' --resource '$($resourceSignal.Resource)' --region '$($resourceSignal.Region)'"
                    } else {
                        throw "No handle or stack/resource/region found in registry"
                    }
                }
            }
        }
        catch {
            Write-Verbose $_.Exception.Message
        }
    }
}
",
              },
              "c:\\cfn\\cfn-hup.conf": {
                "content": "[main]
 stack=AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1
 region=us-east-1
",
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]
 triggers=post.update
 path=Resources.AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryInstanceC1502B8C.Metadata.AWS::CloudFormation::Init
 action=cfn-init.exe -v -c config -s ",
                      {
                        "Ref": "AWS::StackId",
                      },
                      " -r AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryInstanceC1502B8C --region us-east-1
",
                    ],
                  ],
                },
              },
              "c:\\cfn\\scripts\\AD-connector-permissions-setup.ps1": {
                "content": "[CmdletBinding()]
param(
    [string]
    $GroupName,

    [string]
    $DomainAdminUser,

    [string]
    $DomainAdminPassword
)

# Turned off logging;
# Start-Transcript -Path C:\\cfn\\log\\AD-connector-setup.txt

$securePassword = ConvertTo-SecureString $DomainAdminPassword -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential $DomainAdminUser, $securePassword

Start-Process powershell.exe -Credential $credential -ArgumentList "-file c:\\cfn\\scripts\\AD-group-grant-permissions-setup.ps1", "$GroupName"",
              },
              "c:\\cfn\\scripts\\AD-group-grant-permissions-setup.ps1": {
                "content": "[CmdletBinding()]
param(
    [string]
    $GroupName
)

# Turned off logging;
# Start-Transcript -Path C:\\cfn\\log\\AD-connector-setup.txt

#This part of the code gets the domain name and splits it
$fdn=(Get-WmiObject Win32_ComputerSystem).Domain
$dom,$ext=$fdn.split('.')

#Delegate Control
dsacls "CN=$GroupName,OU=Users,OU=$dom,DC=$dom,DC=$ext" /I:T /G "$dom\\$GroupName\`:CCDC;computer"
dsacls "CN=$GroupName,OU=Users,OU=$dom,DC=$dom,DC=$ext" /I:T /G "$dom\\$GroupName\`:CCDC;user"",
              },
              "c:\\cfn\\scripts\\AD-group-setup.ps1": {
                "content": "[CmdletBinding()]
param(
    [string]
    $GroupNames,

    [string]
    $DomainAdminUser,

    [string]
    $DomainAdminPassword
)

# Turned off logging;
# Start-Transcript -Path C:\\cfn\\log\\AD-connector-setup.txt

#This part of the code gets the domain name and splits it
$fdn=(Get-WmiObject Win32_ComputerSystem).Domain
$dom,$ext=$fdn.split('.')

$securePassword = ConvertTo-SecureString $DomainAdminPassword -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential $DomainAdminUser, $securePassword

$groupsArray = $GroupNames -split ','

for ($i=0; $i -lt $groupsArray.Length; $i++) {
    $groupName = $groupsArray[$i]
    $groupExists = Get-ADGroup -Filter {Name -eq $groupName} -Credential $credential
    if($null -eq $groupExists) {
        #Create Group
        New-ADGroup -Name $groupName -GroupCategory Security -GroupScope Global -Credential $credential
    }
}",
              },
              "c:\\cfn\\scripts\\AD-user-group-setup.ps1": {
                "content": "[CmdletBinding()]
param(
    [string]
    $GroupNames,

    [string]
    $UserName,

    [string]
    $DomainAdminUser,

    [string]
    $DomainAdminPassword
)

# Turned off logging;
# Start-Transcript -Path C:\\cfn\\log\\AD-connector-setup.txt

#This part of the code gets the domain name and splits it
$fdn=(Get-WmiObject Win32_ComputerSystem).Domain
$dom,$ext=$fdn.split('.')

$securePassword = ConvertTo-SecureString $DomainAdminPassword -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential $DomainAdminUser, $securePassword

$groupsArray = $GroupNames -split ','

for ($i=0; $i -lt $groupsArray.Length; $i++) {
    #Add User to Group
    Add-ADGroupMember -Identity $groupsArray[$i] -Members $UserName -Credential $credential
}",
              },
              "c:\\cfn\\scripts\\AD-user-setup.ps1": {
                "content": "[CmdletBinding()]
param(
    [string]
    $UserName,

    [string]
    $Password,

    [string]
    $DomainAdminUser,

    [string]
    $DomainAdminPassword,

    [string]
    $PasswordNeverExpires,

    [Parameter(Mandatory=$false)]
    [AllowEmptyString()]
    [string]$UserEmailAddress = ''
)

# Turned off logging;
# Start-Transcript -Path C:\\cfn\\log\\AD-connector-setup.txt

#This part of the code gets the domain name and splits it
$fdn=(Get-WmiObject Win32_ComputerSystem).Domain
$dom,$ext=$fdn.split('.')

$pass = ConvertTo-SecureString $Password -AsPlainText -Force
$securePassword = ConvertTo-SecureString $DomainAdminPassword -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential $DomainAdminUser, $securePassword
$userExists = Get-ADUser -Credential $credential -Filter "Name -eq '$UserName'"

If ($null -eq $userExists -and $UserEmailAddress) {
  #Create User
  New-ADUser -Name $UserName -EmailAddress $UserEmailAddress -AccountPassword $pass -Enabled 1 -Credential $credential -SamAccountName $UserName
}

#Set the admin & connector user's password never expires flag
If (-NOT  ($PasswordNeverExpires -eq 'No')) {
  Set-ADUser -Identity $UserName -PasswordNeverExpires $true -Credential $credential
}  Else {
  Set-ADUser -Identity $UserName -PasswordNeverExpires $false -Credential $credential
}
",
              },
              "c:\\cfn\\scripts\\Configure-password-policy.ps1": {
                "content": "[CmdletBinding()]
param(
    [string]
    $DomainAdminUser,

    [string]
    $DomainAdminPassword,

    [Boolean]
    $ComplexityEnabled,

    [string]
    $LockoutDuration,

    [string]
    $LockoutObservationWindow,

    [string]
    $LockoutThreshold,

    [string]
    $MaxPasswordAge,

    [string]
    $MinPasswordAge,

    [string]
    $MinPasswordLength,

    [string]
    $PasswordHistoryCount,

    [Boolean]
    $ReversibleEncryptionEnabled
)

# Turned off logging;
# Start-Transcript -Path C:\\cfn\\log\\AD-connector-setup.txt

#This part of the code gets the domain name and splits it
$fdn=(Get-WmiObject Win32_ComputerSystem).Domain
$dom,$ext=$fdn.split('.')

$securePassword = ConvertTo-SecureString $DomainAdminPassword -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential $DomainAdminUser, $securePassword

#Configure passsord policy for all users
Set-ADFineGrainedPasswordPolicy -Identity:"CN=CustomerPSO-01,CN=Password Settings Container,CN=System,DC=$dom,DC=$ext" -ComplexityEnabled:$ComplexityEnabled -MaxPasswordAge:$MaxPasswordAge -LockoutDuration:$LockoutDuration -LockoutObservationWindow:$LockoutObservationWindow -LockoutThreshold:$LockoutThreshold -MinPasswordAge:$MinPasswordAge -MinPasswordLength:$MinPasswordLength -PasswordHistoryCount:$PasswordHistoryCount -ReversibleEncryptionEnabled:$ReversibleEncryptionEnabled -Server:$fdn -Credential $credential

#Create password policy subject
Add-ADFineGrainedPasswordPolicySubject -Identity:"CN=CustomerPSO-01,CN=Password Settings Container,CN=System,DC=$dom,DC=$ext" -Server:$fdn -Subjects:"CN=Domain Users,CN=Users,DC=$dom,DC=$ext" -Credential $credential
",
              },
              "c:\\cfn\\scripts\\Join-Domain.ps1": {
                "content": "[CmdletBinding()]
param(
    [string]
    $DomainName,

    [string]
    $UserName,

    [string]
    $Password
)

try {
    $ErrorActionPreference = "Stop"

    $pass = ConvertTo-SecureString $Password -AsPlainText -Force
    $cred = New-Object System.Management.Automation.PSCredential -ArgumentList $UserName,$pass

    Add-Computer -DomainName $DomainName -Credential $cred -ErrorAction Stop

    # Execute restart after script exit and allow time for external services
    $shutdown = Start-Process -FilePath "shutdown.exe" -ArgumentList @("/r", "/t 10") -Wait -NoNewWindow -PassThru
    if ($shutdown.ExitCode -ne 0) {
        throw "[ERROR] shutdown.exe exit code was not 0. It was actually $($shutdown.ExitCode)."
    }
}
catch {
    $_ | Write-AWSQuickStartException
}
",
              },
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "c:\\cfn\\cfn-hup.conf",
                    "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf",
                  ],
                },
              },
            },
          },
        },
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-EC28",
              "reason": "AD config instance just used to configure MAD through user data.",
            },
            {
              "id": "AwsSolutions-EC29",
              "reason": "AD config instance just used to configure MAD through user data.",
            },
          ],
        },
      },
      "Properties": {
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "Encrypted": true,
              "VolumeSize": 50,
              "VolumeType": "gp2",
            },
          },
        ],
        "DisableApiTermination": false,
        "IamInstanceProfile": "EC2-Default-SSM-AD-Role",
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiwindowslatestWindowsServer2016EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.large",
        "LaunchTemplate": {
          "LaunchTemplateName": "AcceleratorManagedActiveDirectoryLaunchTemplate",
          "Version": {
            "Fn::GetAtt": [
              "AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryLaunchTemplate6C81A690",
              "LatestVersionNumber",
            ],
          },
        },
        "SecurityGroupIds": [
          {
            "Ref": "AcceleratorManagedActiveDirectorySecurityGroup",
          },
        ],
        "SubnetId": {
          "Ref": "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookup42366BF1",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AcceleratorManagedActiveDirectoryConfiguringInstance",
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>
 cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId",
                },
                " -r AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryInstanceC1502B8C --region us-east-1 
 # Signal the status from cfn-init
 cfn-signal -e $? --stack AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1 --resource AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryInstanceC1502B8C --region ",
                {
                  "Ref": "AWS::Region",
                },
                "
 </script>
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryKmsPolicy855C8632": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Ref": "SecretsKmsKeyLookup02185F8C",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryKmsPolicy855C8632",
        "Roles": [
          "EC2-Default-SSM-AD-Role",
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectoryConfigInstanceAcceleratorManagedActiveDirectoryLaunchTemplate6C81A690": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
      ],
      "Properties": {
        "LaunchTemplateData": {
          "MetadataOptions": {
            "HttpEndpoint": "enabled",
            "HttpTokens": "required",
          },
        },
        "LaunchTemplateName": "AcceleratorManagedActiveDirectoryLaunchTemplate",
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "AcceleratorManagedActiveDirectoryResolverRule96DE7E60": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunctionLogGroup814E23CB",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleProviderframeworkonEvent1A30C85A",
            "Arn",
          ],
        },
        "executingAccountId": "444444444444",
        "partition": {
          "Ref": "AWS::Partition",
        },
        "region": "us-east-1",
        "roleName": "AWSAccelerator-MAD-example-rule",
        "route53ResolverRuleName": "example-rule",
        "targetIps": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
            "DnsIpAddresses",
          ],
        },
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::UpdateResolverRule",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunction177103F8": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunctionServiceRoleDefaultPolicy0952CE3B",
        "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunctionServiceRole83EF458E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Update resolver group rule target ips",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunctionServiceRole83EF458E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunctionLogGroup814E23CB": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunction177103F8",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunctionServiceRole83EF458E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK created IAM user, role, or group.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunctionServiceRoleDefaultPolicy0952CE3B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "CDK created IAM service role entity.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "route53resolver:UpdateResolverRule",
                "route53resolver:ListResolverRules",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "Route53resolver",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator-MAD-example-rule",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunctionServiceRoleDefaultPolicy0952CE3B",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunctionServiceRole83EF458E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleProviderframeworkonEvent1A30C85A": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleProviderframeworkonEventServiceRoleDefaultPolicyE9827436",
        "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleProviderframeworkonEventServiceRoleEBC7B9DF",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1/AcceleratorManagedActiveDirectoryResolverRule/UpdateResolverRuleProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunction177103F8",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleProviderframeworkonEventServiceRoleEBC7B9DF",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleProviderframeworkonEventServiceRoleDefaultPolicyE9827436": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "CDK created IAM service role entity.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunction177103F8",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleFunction177103F8",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleProviderframeworkonEventServiceRoleDefaultPolicyE9827436",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleProviderframeworkonEventServiceRoleEBC7B9DF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectoryResolverRuleUpdateResolverRuleProviderframeworkonEventServiceRoleEBC7B9DF": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "CDK created IAM user, role, or group.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectorySecurityGroup": {
      "Properties": {
        "GroupDescription": "AcceleratorManagedActiveDirectory managed active directory instance security group",
        "GroupName": "AcceleratorManagedActiveDirectory_mad_instance_sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.4.0.0/16",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "ToPort": 3389,
          },
          {
            "CidrIp": "10.4.0.0/16",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Description",
            "Value": "Security group for AcceleratorManagedActiveDirectory managed active directory instance",
          },
          {
            "Key": "Name",
            "Value": "AcceleratorManagedActiveDirectory_mad_instance_sg",
          },
        ],
        "VpcId": {
          "Ref": "AcceleratorManagedActiveDirectoryVpcLookup37FD07B8",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AcceleratorManagedActiveDirectoryShareDirectory170C440E": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
        "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionLogGroup8A002B69",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryProviderframeworkonEvent8F427FF9",
            "Arn",
          ],
        },
        "assumeRoleName": "AWSAccelerator-MadAccept-Role",
        "directoryId": {
          "Ref": "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        },
        "madAccountId": "444444444444",
        "partition": {
          "Ref": "AWS::Partition",
        },
        "region": "us-east-1",
        "shareTargetAccountIds": [
          "111111111111",
          "333333333333",
          "444444444444",
          "555555555555",
          "666666666666",
        ],
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::ShareActiveDirectory",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionF5252A97": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
        "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionServiceRoleDefaultPolicy8714A6DF",
        "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionServiceRole772D6922",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Share Manage active directory handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionServiceRole772D6922",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionLogGroup8A002B69": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionF5252A97",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionServiceRole772D6922": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource lambda needs to access to directory service.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionServiceRoleDefaultPolicy8714A6DF": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource lambda needs to access to directory service.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ds:ShareDirectory",
                "ds:UnshareDirectory",
                "ds:DescribeSharedDirectories",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "DirectoryServices",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator-MadAccept-Role",
                  ],
                ],
              },
              "Sid": "StsAssumeRoleActions",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionServiceRoleDefaultPolicy8714A6DF",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionServiceRole772D6922",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryProviderframeworkonEvent8F427FF9": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
        "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryProviderframeworkonEventServiceRoleDefaultPolicy37F65850",
        "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryProviderframeworkonEventServiceRoleD7FD8283",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1/AcceleratorManagedActiveDirectoryShareDirectory/ShareManageActiveDirectoryProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionF5252A97",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryProviderframeworkonEventServiceRoleD7FD8283",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryProviderframeworkonEventServiceRoleD7FD8283": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource lambda needs to access to directory service.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryProviderframeworkonEventServiceRoleDefaultPolicy37F65850": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryActiveDirectoryB0B62F96",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroupPolicyResourcePolicyDB558F25",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionexamplecomLogGroup6C928FD0",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunction7DAC44F8",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleDefaultPolicy574EB864",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionServiceRoleE5897B15",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionFunctionLogGroupDC68D667",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventA649EF49",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRoleDefaultPolicyE69C5BD1",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionManageActiveDirectoryLogSubscriptionProviderframeworkonEventServiceRole28ADC179",
        "AcceleratorManagedActiveDirectoryActiveDirectoryAcceleratorManagedActiveDirectoryLogSubscriptionFD5F81B0",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource lambda needs to access to directory service.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionF5252A97",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryFunctionF5252A97",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "cceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryProviderframeworkonEventServiceRoleDefaultPolicy37F65850",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectoryShareDirectoryShareManageActiveDirectoryProviderframeworkonEventServiceRoleD7FD8283",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookup42366BF1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionLogGroupC866019A",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupProviderframeworkonEventCB4AF881",
            "Arn",
          ],
        },
        "subnetName": "SharedServices-App-A",
        "vpcId": {
          "Ref": "AcceleratorManagedActiveDirectoryVpcLookup37FD07B8",
        },
      },
      "Type": "Custom::SubnetIdLookup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionF062DAE0": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionServiceRoleDefaultPolicyF9D599D1",
        "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionServiceRoleEB14A5A3",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Lookup subnet id from account",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionServiceRoleEB14A5A3",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionLogGroupC866019A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionF062DAE0",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionServiceRoleDefaultPolicyF9D599D1": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeSubnets",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "Ec2Actions",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionServiceRoleDefaultPolicyF9D599D1",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionServiceRoleEB14A5A3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionServiceRoleEB14A5A3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupProviderframeworkonEventCB4AF881": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleDefaultPolicy85B51A1A",
        "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleA4FEBDEC",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1/AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookup/SubnetIdLookupProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionF062DAE0",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleA4FEBDEC",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleA4FEBDEC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleDefaultPolicy85B51A1A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionF062DAE0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupFunctionF062DAE0",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "eratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleDefaultPolicy85B51A1A",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectorySharedServicesAppASubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleA4FEBDEC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookup4A162155": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunctionLogGroup705D6238",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupProviderframeworkonEvent2AA32FC1",
            "Arn",
          ],
        },
        "subnetName": "SharedServices-App-B",
        "vpcId": {
          "Ref": "AcceleratorManagedActiveDirectoryVpcLookup37FD07B8",
        },
      },
      "Type": "Custom::SubnetIdLookup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunction8383C6C9": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunctionServiceRoleDefaultPolicy11CD1C76",
        "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunctionServiceRoleDF7E4CD5",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Lookup subnet id from account",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunctionServiceRoleDF7E4CD5",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunctionLogGroup705D6238": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunction8383C6C9",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunctionServiceRoleDF7E4CD5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunctionServiceRoleDefaultPolicy11CD1C76": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeSubnets",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "Ec2Actions",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunctionServiceRoleDefaultPolicy11CD1C76",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunctionServiceRoleDF7E4CD5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupProviderframeworkonEvent2AA32FC1": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleDefaultPolicyFBFF8934",
        "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleD9B17EC7",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1/AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookup/SubnetIdLookupProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunction8383C6C9",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleD9B17EC7",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleD9B17EC7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleDefaultPolicyFBFF8934": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunction8383C6C9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupFunction8383C6C9",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "eratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleDefaultPolicyFBFF8934",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectorySharedServicesAppBSubnetLookupSubnetIdLookupProviderframeworkonEventServiceRoleD9B17EC7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectoryVpcLookup37FD07B8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunctionLogGroup06E615DD",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupProviderframeworkonEvent71FD8976",
            "Arn",
          ],
        },
        "vpcName": "SharedServices-Main",
      },
      "Type": "Custom::VpcIdLookup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunction53EFBF78": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunctionServiceRoleDefaultPolicy60466360",
        "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunctionServiceRoleDCBF26B1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Lookup vpc id from account",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunctionServiceRoleDCBF26B1",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunctionLogGroup06E615DD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunction53EFBF78",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunctionServiceRoleDCBF26B1": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunctionServiceRoleDefaultPolicy60466360": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeVpcs",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "Ec2Actions",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunctionServiceRoleDefaultPolicy60466360",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunctionServiceRoleDCBF26B1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupProviderframeworkonEvent71FD8976": {
      "DependsOn": [
        "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupProviderframeworkonEventServiceRoleDefaultPolicy4C2EEF35",
        "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupProviderframeworkonEventServiceRole2DA585BD",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1/AcceleratorManagedActiveDirectoryVpcLookup/VpcIdLookupProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunction53EFBF78",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupProviderframeworkonEventServiceRole2DA585BD",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupProviderframeworkonEventServiceRole2DA585BD": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupProviderframeworkonEventServiceRoleDefaultPolicy4C2EEF35": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource lambda needs this access.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunction53EFBF78",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupFunction53EFBF78",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupProviderframeworkonEventServiceRoleDefaultPolicy4C2EEF35",
        "Roles": [
          {
            "Ref": "AcceleratorManagedActiveDirectoryVpcLookupVpcIdLookupProviderframeworkonEventServiceRole2DA585BD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Cross account EC2 route OnEvent handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionLogGroupCFE2C9BD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator*",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
            {
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EC2RouteCreateDelete",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1/CrossAccountRouteFramework/CrossAccountRouteProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAcctSsmParamNonTemplateStaticCrossRegionCrossAccount555555555555usWest2VpcPeering14BCFBD5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/NonTemplate-Static-Cross-Region-Cross-Account/id",
            "value": {
              "Ref": "NonTemplateStaticCrossRegionCrossAccountVpcPeering21318A9A",
            },
          },
        ],
        "region": "us-west-2",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterDifferentOuCrossRegionIpam222222222222usWest2VpcPeering239989D1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "222222222222",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Cross-Region-Ipam/id",
            "value": {
              "Ref": "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering222222222222A97FB7A1",
            },
          },
        ],
        "region": "us-west-2",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterDifferentOuCrossRegionIpam333333333333usWest2VpcPeeringCD15165E": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "333333333333",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Cross-Region-Ipam/id",
            "value": {
              "Ref": "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering3333333333338C0EC7DC",
            },
          },
        ],
        "region": "us-west-2",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterDifferentOuCrossRegionStatic222222222222usWest2VpcPeering5DCCCC4A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "222222222222",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Cross-Region-Static/id",
            "value": {
              "Ref": "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering2222222222224EFA245F",
            },
          },
        ],
        "region": "us-west-2",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterDifferentOuCrossRegionStatic333333333333usWest2VpcPeering93661403": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "333333333333",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Cross-Region-Static/id",
            "value": {
              "Ref": "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering3333333333338AAE4E63",
            },
          },
        ],
        "region": "us-west-2",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterDifferentOuSameRegionIpam222222222222usEast1VpcPeeringFE45B636": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "222222222222",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Same-Region-Ipam/id",
            "value": {
              "Ref": "TemplateAccepterDifferentOUSameRegionIpamVpcPeering222222222222CD96FF68",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterDifferentOuSameRegionIpam333333333333usEast1VpcPeeringF31D1BE4": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "333333333333",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Same-Region-Ipam/id",
            "value": {
              "Ref": "TemplateAccepterDifferentOUSameRegionIpamVpcPeering333333333333D961F99E",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterDifferentOuSameRegionStatic222222222222usEast1VpcPeering538ABA5A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "222222222222",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Same-Region-Static/id",
            "value": {
              "Ref": "TemplateAccepterDifferentOUSameRegionStaticVpcPeering2222222222226A14CD92",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterDifferentOuSameRegionStatic333333333333usEast1VpcPeering11169A58": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "333333333333",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Same-Region-Static/id",
            "value": {
              "Ref": "TemplateAccepterDifferentOUSameRegionStaticVpcPeering333333333333F325909D",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterSameOuSameRegionIpam555555555555usEast1VpcPeering3F12FD99": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Same-Region-Ipam/id",
            "value": {
              "Ref": "TemplateAccepterSameOUSameRegionIpamVpcPeering55555555555545CF41EC",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterSameOuSameRegionStatic555555555555usEast1VpcPeering9CA5D6B9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Same-Region-Static/id",
            "value": {
              "Ref": "TemplateAccepterSameOUSameRegionStaticVpcPeering555555555555368CB62B",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateRequesterSameOuCrossRegionIpam555555555555usWest2VpcPeeringF6D14B3C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Cross-Region-Ipam/id",
            "value": {
              "Ref": "TemplateRequesterSameOUCrossRegionIpamVpcPeering497DB0ED",
            },
          },
        ],
        "region": "us-west-2",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateRequesterSameOuCrossRegionStatic555555555555usWest2VpcPeering37DFD617": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Cross-Region-Static/id",
            "value": {
              "Ref": "TemplateRequesterSameOUCrossRegionStaticVpcPeering1A41D5E0",
            },
          },
        ],
        "region": "us-west-2",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateRequesterSameOuSameRegionIpam555555555555usEast1VpcPeeringF4F86922": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Same-Region-Ipam/id",
            "value": {
              "Ref": "TemplateRequesterSameOUSameRegionIpamVpcPeeringAA899B2E",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateRequesterSameOuSameRegionStatic555555555555usEast1VpcPeering63C43FB3": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Same-Region-Static/id",
            "value": {
              "Ref": "TemplateRequesterSameOUSameRegionStaticVpcPeeringEC4F2D73",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamWorkloadTemplateToNetworkEndpoints555555555555usEast1VpcPeeringFF23CF40": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/WorkloadTemplateToNetworkEndpoints/id",
            "value": {
              "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5": {
      "DependsOn": [
        "CustomGetIpamSubnetCidrCustomResourceProviderRoleADF93CF4",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetIpamSubnetCidrCustomResourceProviderRoleADF93CF4",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetIpamSubnetCidrCustomResourceProviderLogGroup655A9FB7": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetIpamSubnetCidrCustomResourceProviderRoleADF93CF4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ec2:DescribeSubnets",
                    "ssm:GetParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomGetResourceShareCustomResourceProviderHandler5DB0EF7A": {
      "DependsOn": [
        "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ram:AcceptResourceShareInvitation",
                    "ram:GetResourceShareInvitations",
                    "ram:GetResourceShares",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B": {
      "DependsOn": [
        "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetResourceShareItemCustomResourceProviderLogGroup6DB08FC0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ram:ListResources",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC": {
      "DependsOn": [
        "CustomShareSubnetTagsCustomResourceProviderRole2582495C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomShareSubnetTagsCustomResourceProviderRole2582495C",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomShareSubnetTagsCustomResourceProviderLogGroupA1F3F80A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomShareSubnetTagsCustomResourceProviderRole2582495C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DeleteTags",
                    "ec2:CreateTags",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":*:subnet/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":*:vpc/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "ec2:DescribeTags",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeSubnets",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:PutParameter",
                    "ssm:DeleteParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F": {
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Custom resource provider to put cross-account ssm parameter value",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameter",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmPutParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3": {
      "DependsOn": [
        "CustomTransitGatewayPrefixListReferenceCustomResourceProviderRoleC5D4C080",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomTransitGatewayPrefixListReferenceCustomResourceProviderRoleC5D4C080",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomTransitGatewayPrefixListReferenceCustomResourceProviderLogGroupBC9F3669": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomTransitGatewayPrefixListReferenceCustomResourceProviderRoleC5D4C080": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:CreateTransitGatewayPrefixListReference",
                    "ec2:ModifyTransitGatewayPrefixListReference",
                    "ec2:DeleteTransitGatewayPrefixListReference",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowModifyTgwReferences",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NetworkEndpointsNetworkEndpointsASubnetA733F49A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetResourceShareItemCustomResourceProviderLogGroup6DB08FC0",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B",
            "Arn",
          ],
        },
        "resourceOwner": "OTHER-ACCOUNTS",
        "resourceShareArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ram:us-east-1:555555555555:resource-share/",
              {
                "Ref": "NetworkEndpointsNetworkEndpointsASubnetShare4B105D59",
              },
            ],
          ],
        },
        "resourceType": "ec2:Subnet",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetResourceShareItem",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkEndpointsNetworkEndpointsASubnetShare4B105D59": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetResourceShareCustomResourceProviderHandler5DB0EF7A",
            "Arn",
          ],
        },
        "name": "Network-Endpoints-A_SubnetShare",
        "owningAccountId": "555555555555",
        "resourceOwner": "OTHER-ACCOUNTS",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetResourceShare",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkEndpointsNetworkEndpointsTgwAttachAIpamSubnetLookup4EED1D71": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetIpamSubnetCidrCustomResourceProviderLogGroup655A9FB7",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-GetIpamCidrRole",
            ],
          ],
        },
        "ssmSubnetIdPath": "/accelerator/network/vpc/Network-Endpoints/subnet/Network-EndpointsTgwAttach-A/id",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetIpamSubnetCidr",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkEndpointsNetworkEndpointsTgwAttachBIpamSubnetLookupC27B33FE": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetIpamSubnetCidrCustomResourceProviderLogGroup655A9FB7",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetIpamSubnetCidrCustomResourceProviderHandler8C11DBB5",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-GetIpamCidrRole",
            ],
          ],
        },
        "ssmSubnetIdPath": "/accelerator/network/vpc/Network-Endpoints/subnet/Network-EndpointsTgwAttach-B/id",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetIpamSubnetCidr",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkEndpointsVpcManagementSg2B8F9418": {
      "Properties": {
        "GroupDescription": "Management Security Group",
        "GroupName": "Management",
        "SecurityGroupEgress": [
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "All Outbound",
            "IpProtocol": "-1",
          },
          {
            "CidrIp": "100.96.252.0/23",
            "Description": "All Outbound",
            "IpProtocol": "-1",
          },
          {
            "CidrIp": "100.96.250.0/23",
            "Description": "All Outbound",
            "IpProtocol": "-1",
          },
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "NetworkEndpointsNetworkEndpointsTgwAttachAIpamSubnetLookup4EED1D71",
                "ipv4CidrBlock",
              ],
            },
            "Description": "All Outbound",
            "IpProtocol": "-1",
          },
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "NetworkEndpointsNetworkEndpointsTgwAttachBIpamSubnetLookupC27B33FE",
                "ipv4CidrBlock",
              ],
            },
            "Description": "All Outbound",
            "IpProtocol": "-1",
          },
          {
            "Description": "All Outbound",
            "DestinationPrefixListId": {
              "Ref": "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "IpProtocol": "-1",
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Limited Outbound",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Limited Outbound",
            "FromPort": 22,
            "IpProtocol": "udp",
            "ToPort": 22,
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "IP Protocol Rule",
            "IpProtocol": "50",
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "IP Protocol Rule",
            "IpProtocol": "45",
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "IP Protocol Rule",
            "IpProtocol": "5",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Management RDP Traffic Inbound",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "ToPort": 3389,
          },
          {
            "CidrIp": "100.96.252.0/23",
            "Description": "Management RDP Traffic Inbound",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "ToPort": 3389,
          },
          {
            "CidrIp": "100.96.250.0/23",
            "Description": "Management RDP Traffic Inbound",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "ToPort": 3389,
          },
          {
            "CidrIpv6": "fd00::/8",
            "Description": "Management RDP Traffic Inbound",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "ToPort": 3389,
          },
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "NetworkEndpointsNetworkEndpointsTgwAttachAIpamSubnetLookup4EED1D71",
                "ipv4CidrBlock",
              ],
            },
            "Description": "Management RDP Traffic Inbound",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "ToPort": 3389,
          },
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "NetworkEndpointsNetworkEndpointsTgwAttachBIpamSubnetLookupC27B33FE",
                "ipv4CidrBlock",
              ],
            },
            "Description": "Management RDP Traffic Inbound",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "ToPort": 3389,
          },
          {
            "Description": "Management RDP Traffic Inbound",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "SourcePrefixListId": {
              "Ref": "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "ToPort": 3389,
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
          {
            "CidrIp": "100.96.252.0/23",
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
          {
            "CidrIp": "100.96.250.0/23",
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "NetworkEndpointsNetworkEndpointsTgwAttachAIpamSubnetLookup4EED1D71",
                "ipv4CidrBlock",
              ],
            },
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "NetworkEndpointsNetworkEndpointsTgwAttachBIpamSubnetLookupC27B33FE",
                "ipv4CidrBlock",
              ],
            },
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
          {
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "SourcePrefixListId": {
              "Ref": "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "ToPort": 22,
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "udp",
            "ToPort": 22,
          },
          {
            "CidrIp": "100.96.252.0/23",
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "udp",
            "ToPort": 22,
          },
          {
            "CidrIp": "100.96.250.0/23",
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "udp",
            "ToPort": 22,
          },
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "NetworkEndpointsNetworkEndpointsTgwAttachAIpamSubnetLookup4EED1D71",
                "ipv4CidrBlock",
              ],
            },
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "udp",
            "ToPort": 22,
          },
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "NetworkEndpointsNetworkEndpointsTgwAttachBIpamSubnetLookupC27B33FE",
                "ipv4CidrBlock",
              ],
            },
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "udp",
            "ToPort": 22,
          },
          {
            "Description": "Management SSH Traffic Inbound",
            "FromPort": 22,
            "IpProtocol": "udp",
            "SourcePrefixListId": {
              "Ref": "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "ToPort": 22,
          },
          {
            "CidrIp": "100.96.252.0/23",
            "Description": "IP Protocol Rule",
            "IpProtocol": "50",
          },
          {
            "CidrIp": "100.96.252.0/23",
            "Description": "IP Protocol Rule",
            "IpProtocol": "45",
          },
          {
            "CidrIp": "100.96.252.0/23",
            "Description": "IP Protocol Rule",
            "IpProtocol": "5",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Management",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "NetworkEndpointsVpcManagementSgManagementEgress00D58058BF": {
      "Properties": {
        "Description": "All Outbound",
        "DestinationSecurityGroupId": {
          "Ref": "NetworkEndpointsVpcManagementSg2B8F9418",
        },
        "GroupId": {
          "Ref": "NetworkEndpointsVpcManagementSg2B8F9418",
        },
        "IpProtocol": "-1",
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "NetworkEndpointsVpcManagementSgManagementIngress008FD972B5": {
      "Properties": {
        "Description": "Management RDP Traffic Inbound",
        "FromPort": 3389,
        "GroupId": {
          "Ref": "NetworkEndpointsVpcManagementSg2B8F9418",
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "NetworkEndpointsVpcManagementSg2B8F9418",
        },
        "ToPort": 3389,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "NetworkEndpointsVpcManagementSgManagementIngress105119E927": {
      "Properties": {
        "Description": "Management SSH Traffic Inbound",
        "FromPort": 22,
        "GroupId": {
          "Ref": "NetworkEndpointsVpcManagementSg2B8F9418",
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "NetworkEndpointsVpcManagementSg2B8F9418",
        },
        "ToPort": 22,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "NetworkEndpointsVpcManagementSgManagementIngress1135D6C2DD": {
      "Properties": {
        "Description": "Management SSH Traffic Inbound",
        "FromPort": 22,
        "GroupId": {
          "Ref": "NetworkEndpointsVpcManagementSg2B8F9418",
        },
        "IpProtocol": "udp",
        "SourceSecurityGroupId": {
          "Ref": "NetworkEndpointsVpcManagementSg2B8F9418",
        },
        "ToPort": 22,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "NetworkEndpointsVpcNetworkEndpointsCustomEndpointSgSg4BB9279D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-EC23",
              "reason": "User defined an all ingress rule in configuration.",
            },
          ],
        },
      },
      "Properties": {
        "GroupDescription": "Accelerator security group for custom endpoint",
        "GroupName": "Network-Endpoints-CustomEndpointSg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow access to 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Network-Endpoints-CustomEndpointSg",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "NetworkInspectiondeployedtg2898BDF56": {
      "Properties": {
        "HealthCheckEnabled": true,
        "Matcher": {},
        "Name": "deployed-tg-2",
        "Port": 443,
        "Protocol": "HTTPS",
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployed-tg-2",
          },
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "NonTemplateIpamSameRegionSameAccountVpcPeering84E7EFE7": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentral2idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NonTemplate-Ipam-Same-Region-Same-Account",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NonTemplateIpamSameRegionSameAccountVpcPeeringSharedServicesNonTemplateIpamCentral2VpcNetworkNonTemplateIpamPublic2RouteTablePeeringRouteToSharedServicesIpam82F61944": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentral2routeTableNetworkNonTemplateIpamPublic2idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateIpamSameRegionSameAccountVpcPeering84E7EFE7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NonTemplateIpamSameRegionSameAccountVpcPeeringSharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSharedServicesIpam2137346A6": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentral2cidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateIpamSameRegionSameAccountVpcPeering84E7EFE7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NonTemplateStaticCrossRegionCrossAccountVpcPeering21318A9A": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-west-2",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupNonTemplateStaticCrossRegionCrossAccount555555555555usWest2D42BFA49",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NonTemplate-Static-Cross-Region-Cross-Account",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NonTemplateStaticCrossRegionCrossAccountVpcPeeringNetworkNonTemplateStaticWestVpcNetworkNonTemplateStaticPublicWestRouteTablePeeringRouteToSharedServicesStatic91D185A3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
        "routeDefinition": {
          "DestinationCidrBlock": "172.19.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkNonTemplateStaticWest555555555555NetworkNonTemplateStaticPublicWest1781BEE4",
          },
          "VpcPeeringConnectionId": {
            "Ref": "NonTemplateStaticCrossRegionCrossAccountVpcPeering21318A9A",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "NonTemplateStaticCrossRegionCrossAccountVpcPeeringSharedServicesNonTemplateStaticCentralVpcNetworkNonTemplateStaticPublicRouteTablePeeringRouteToNetworkStaticWestB4FB63D2": {
      "Properties": {
        "DestinationCidrBlock": "172.18.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralrouteTableNetworkNonTemplateStaticPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateStaticCrossRegionCrossAccountVpcPeering21318A9A",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NonTemplateStaticSameRegionSameAccountVpcPeering5F277ADB": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentral2idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NonTemplate-Static-Same-Region-Same-Account",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NonTemplateStaticSameRegionSameAccountVpcPeeringSharedServicesNonTemplateStaticCentral2VpcNetworkNonTemplateStaticPublic2RouteTablePeeringRouteToSharedServicesStaticA9E1D769": {
      "Properties": {
        "DestinationCidrBlock": "172.19.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentral2routeTableNetworkNonTemplateStaticPublic2idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateStaticSameRegionSameAccountVpcPeering5F277ADB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NonTemplateStaticSameRegionSameAccountVpcPeeringSharedServicesNonTemplateStaticCentralVpcNetworkNonTemplateStaticPublicRouteTablePeeringRouteToSharedServicesStatic25F1D18CA": {
      "Properties": {
        "DestinationCidrBlock": "172.20.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralrouteTableNetworkNonTemplateStaticPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateStaticSameRegionSameAccountVpcPeering5F277ADB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "SecretsKmsKeyLookup02185F8C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-CrossAccount-SecretsKms-Role",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/kms/secrets-manager/key-arn",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "ShareSubnetTagsNetworkNetworkEndpointsA8E5F5342": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomShareSubnetTagsCustomResourceProviderLogGroupA1F3F80A",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC",
            "Arn",
          ],
        },
        "acceleratorSsmParamPrefix": "/accelerator",
        "sharedSubnetId": {
          "Ref": "NetworkEndpointsNetworkEndpointsASubnetA733F49A",
        },
        "sharedSubnetName": "Network-Endpoints-A",
        "subnetTags": [
          {
            "key": "exampleKey",
            "value": "exampleValue",
          },
          {
            "key": "Name",
            "value": "Network-Endpoints-A",
          },
        ],
        "vpcName": "Network-Endpoints",
        "vpcTags": [
          {
            "key": "env",
            "value": "prod",
          },
          {
            "key": "Name",
            "value": "Network-Endpoints",
          },
        ],
      },
      "Type": "Custom::ShareSubnetTags",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainShared101000016NetworkMainAndSharedServicesMainPeeringStaticRouteA3EACCC2": {
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/16",
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainpeeringNetworkMainAndSharedServicesMainPeeringidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainrouteTablesSharedServicesMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "SharedServicesMainTest01acceleratorPrefixList001Blackhole8D7C974C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomTransitGatewayPrefixListReferenceCustomResourceProviderLogGroupBC9F3669",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3",
            "Arn",
          ],
        },
        "prefixListReference": {
          "Blackhole": true,
          "PrefixListId": {
            "Ref": "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlist001idC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "TransitGatewayRouteTableId": {
            "Ref": "SsmParameterValueacceleratornetworktransitGatewaysSharedServicesMainrouteTablesSharedServicesMainTest01idC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
      },
      "Type": "Custom::TransitGatewayPrefixListReference",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1/version",
        "Type": "String",
        "Value": "1.11.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamLookupInfraTemplateFullIpamCentral555555555555F50742BF": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupInfraTemplateFullIpamCentral555555555555WorkloadARtE480AB18": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupInfraTemplateFullStaticCentral555555555555WorkloadARt08262661": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupInfraTemplateHalfIpamWest444444444444A3CA0C06": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Half-Ipam-West/cidr/ipv4",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupInfraTemplateHalfIpamWest444444444444WorkloadARtA6C7FE9F": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Half-Ipam-West/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupInfraTemplateHalfStaticWest444444444444WorkloadARt4604C660": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Half-Static-West/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkEndpoints5555555555558C5D9A8A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-Endpoints/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkEndpoints555555555555NetworkEndpointsADC159D58": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-A/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkEndpoints555555555555NetworkEndpointsB03E8C0E8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-B/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/routeTable/Network-NonTemplate-Ipam-Public/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateIpamWest555555555555E5A02EBF": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/cidr/ipv4",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateStaticWest555555555555NetworkNonTemplateStaticPublicWest1781BEE4": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-West/routeTable/Network-NonTemplate-Static-Public-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNonTemplateStaticCrossRegionCrossAccount555555555555usWest2D42BFA49": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullIpamCentral222222222222DA41D037": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullIpamCentral222222222222WorkloadARtD50A5C23": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullIpamCentral3333333333334D264A9C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullIpamCentral333333333333WorkloadARt33C6CCAC": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullIpamWest222222222222BF7CE9B3": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/cidr/ipv4",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullIpamWest222222222222WorkloadARtD18EFAD6": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullIpamWest33333333333367DFFBC7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/cidr/ipv4",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullIpamWest333333333333WorkloadARtDCA1199D": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullStaticCentral222222222222WorkloadARt937ABD41": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Static-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullStaticCentral333333333333WorkloadARtE6079402": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Static-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullStaticWest222222222222WorkloadARt8C69A336": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Static-West/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSecurityTemplateFullStaticWest333333333333WorkloadARt2061E87F": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Static-West/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterDifferentOuCrossRegionIpam222222222222usWest288D6E8BB": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterDifferentOuCrossRegionIpam333333333333usWest291B2020E": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterDifferentOuCrossRegionStatic222222222222usWest2981FEC9E": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Static-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterDifferentOuCrossRegionStatic333333333333usWest2056B0A6D": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Static-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterDifferentOuSameRegionIpam222222222222usEast11FE6A5BC": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterDifferentOuSameRegionIpam333333333333usEast17EB45812": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterDifferentOuSameRegionStatic222222222222usEast11B8A8DE8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "222222222222",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterDifferentOuSameRegionStatic333333333333usEast1A44CF164": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/network/vpc/Security-Template-Full-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterSameOuHalfCrossRegionIpam444444444444usWest21E803B50": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Half-Ipam-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterSameOuHalfCrossRegionStatic444444444444usWest26D72B578": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Half-Static-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterSameOuSameRegionIpam555555555555usEast1B8F60373": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterSameOuSameRegionStatic555555555555usEast12F0A86F5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterSameOuCrossRegionIpam555555555555usWest2818AF480": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterSameOuCrossRegionStatic555555555555usWest27D74F78B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-West/id",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterSameOuSameRegionIpam555555555555usEast1F4722629": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterSameOuSameRegionStatic555555555555usEast1CF8A3A0A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupWorkloadTemplateToNetworkEndpoints555555555555usEast10931CC00": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-Endpoints/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamNetworkEndpointsManagementSecurityGroup157CDC67": {
      "DependsOn": [
        "SsmParamTemplateAccepterDifferentOuCrossRegionStaticVpcPeering2222222222222B7169AA",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpc/Network-Endpoints/securityGroup/Management/id",
        "Type": "String",
        "Value": {
          "Ref": "NetworkEndpointsVpcManagementSg2B8F9418",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamNetworkEndpointsNetworkEndpointsCustomEndpointSgSecurityGroupE01E3A88": {
      "DependsOn": [
        "SsmParamTemplateAccepterDifferentOuCrossRegionStaticVpcPeering2222222222222B7169AA",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpc/Network-Endpoints/securityGroup/Network-Endpoints-CustomEndpointSg/id",
        "Type": "String",
        "Value": {
          "Ref": "NetworkEndpointsVpcNetworkEndpointsCustomEndpointSgSg4BB9279D",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamNonTemplateIpamSameRegionSameAccountVpcPeeringB7EBA950": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NonTemplate-Ipam-Same-Region-Same-Account/id",
        "Type": "String",
        "Value": {
          "Ref": "NonTemplateIpamSameRegionSameAccountVpcPeering84E7EFE7",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamNonTemplateStaticCrossRegionCrossAccountVpcPeering791A2C17": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NonTemplate-Static-Cross-Region-Cross-Account/id",
        "Type": "String",
        "Value": {
          "Ref": "NonTemplateStaticCrossRegionCrossAccountVpcPeering21318A9A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamNonTemplateStaticSameRegionSameAccountVpcPeeringA99F12D0": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NonTemplate-Static-Same-Region-Same-Account/id",
        "Type": "String",
        "Value": {
          "Ref": "NonTemplateStaticSameRegionSameAccountVpcPeering5F277ADB",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-444444444444-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterDifferentOuCrossRegionIpamVpcPeering222222222222B09FB348": {
      "DependsOn": [
        "SsmParamTemplateAccepterDifferentOuCrossRegionStaticVpcPeering2222222222222B7169AA",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Cross-Region-Ipam/222222222222/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering222222222222A97FB7A1",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterDifferentOuCrossRegionIpamVpcPeering333333333333EC2CEEAE": {
      "DependsOn": [
        "SsmParamTemplateAccepterDifferentOuCrossRegionStaticVpcPeering2222222222222B7169AA",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Cross-Region-Ipam/333333333333/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering3333333333338C0EC7DC",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterDifferentOuCrossRegionStaticVpcPeering2222222222222B7169AA": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Cross-Region-Static/222222222222/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering2222222222224EFA245F",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterDifferentOuCrossRegionStaticVpcPeering333333333333CDB787C9": {
      "DependsOn": [
        "SsmParamTemplateAccepterDifferentOuSameRegionStaticVpcPeering33333333333352912D1C",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Cross-Region-Static/333333333333/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering3333333333338AAE4E63",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterDifferentOuSameRegionIpamVpcPeering22222222222214BE4B92": {
      "DependsOn": [
        "SsmParamTemplateAccepterDifferentOuSameRegionStaticVpcPeering33333333333352912D1C",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Same-Region-Ipam/222222222222/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterDifferentOUSameRegionIpamVpcPeering222222222222CD96FF68",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterDifferentOuSameRegionIpamVpcPeering3333333333330791FE46": {
      "DependsOn": [
        "SsmParamTemplateAccepterDifferentOuSameRegionStaticVpcPeering33333333333352912D1C",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Same-Region-Ipam/333333333333/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterDifferentOUSameRegionIpamVpcPeering333333333333D961F99E",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterDifferentOuSameRegionStaticVpcPeering2222222222229801C5DF": {
      "DependsOn": [
        "SsmParamTemplateAccepterDifferentOuSameRegionStaticVpcPeering33333333333352912D1C",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Same-Region-Static/222222222222/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterDifferentOUSameRegionStaticVpcPeering2222222222226A14CD92",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterDifferentOuSameRegionStaticVpcPeering33333333333352912D1C": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Different-OU-Same-Region-Static/333333333333/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterDifferentOUSameRegionStaticVpcPeering333333333333F325909D",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuHalfCrossRegionIpamVpcPeering4444444444449B0F22B3": {
      "DependsOn": [
        "SsmParamTemplateAccepterSameOuSameRegionStaticVpcPeering5555555555551207336B",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Half-Cross-Region-Ipam/444444444444/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUHalfCrossRegionIpamVpcPeering444444444444A5FD7D4A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuHalfCrossRegionStaticVpcPeering444444444444250BD87B": {
      "DependsOn": [
        "SsmParamTemplateAccepterSameOuSameRegionStaticVpcPeering5555555555551207336B",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Half-Cross-Region-Static/444444444444/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUHalfCrossRegionStaticVpcPeering444444444444FE106DC5",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuSameRegionIpamVpcPeering4444444444441753248F": {
      "DependsOn": [
        "SsmParamTemplateAccepterSameOuSameRegionStaticVpcPeering5555555555551207336B",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Same-Region-Ipam/444444444444/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUSameRegionIpamVpcPeering444444444444CB7629A7",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuSameRegionIpamVpcPeering55555555555543DD95D2": {
      "DependsOn": [
        "SsmParamTemplateAccepterSameOuSameRegionStaticVpcPeering5555555555551207336B",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Same-Region-Ipam/555555555555/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUSameRegionIpamVpcPeering55555555555545CF41EC",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuSameRegionStaticVpcPeering444444444444CBC5152F": {
      "DependsOn": [
        "SsmParamTemplateRequesterSameOuSameRegionStaticVpcPeering0F9D06E7",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Same-Region-Static/444444444444/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUSameRegionStaticVpcPeering4444444444445B91A91E",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuSameRegionStaticVpcPeering5555555555551207336B": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Same-Region-Static/555555555555/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUSameRegionStaticVpcPeering555555555555368CB62B",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuCrossRegionIpamVpcPeeringB284C5EA": {
      "DependsOn": [
        "SsmParamTemplateRequesterSameOuSameRegionStaticVpcPeering0F9D06E7",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Cross-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUCrossRegionIpamVpcPeering497DB0ED",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuCrossRegionStaticVpcPeeringE69A52BE": {
      "DependsOn": [
        "SsmParamTemplateRequesterSameOuSameRegionStaticVpcPeering0F9D06E7",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Cross-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUCrossRegionStaticVpcPeering1A41D5E0",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuSameRegionIpamVpcPeering3CA761B5": {
      "DependsOn": [
        "SsmParamTemplateRequesterSameOuSameRegionStaticVpcPeering0F9D06E7",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Same-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUSameRegionIpamVpcPeeringAA899B2E",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterSameOuSameRegionStaticVpcPeering0F9D06E7": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Same-OU-Same-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterSameOUSameRegionStaticVpcPeeringEC4F2D73",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamWorkloadTemplateToNetworkEndpointsVpcPeeringA6E15753": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/WorkloadTemplateToNetworkEndpoints/id",
        "Type": "String",
        "Value": {
          "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering222222222222A97FB7A1": {
      "Properties": {
        "PeerOwnerId": "222222222222",
        "PeerRegion": "us-west-2",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterDifferentOuCrossRegionIpam222222222222usWest288D6E8BB",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Different-OU-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering222222222222SecurityTemplateFullIpamWestVpcWorkloadARtRouteTablePeeringToSharedServicesNonTemplateIpamCentralFB3767B9": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "roleArn": "arn:aws:iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-west-2",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupSecurityTemplateFullIpamWest222222222222WorkloadARtD18EFAD6",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering222222222222A97FB7A1",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering222222222222SharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSecurityTemplateFullIpamWest394B4EE8": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupSecurityTemplateFullIpamWest222222222222BF7CE9B3",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering222222222222A97FB7A1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering3333333333338C0EC7DC": {
      "Properties": {
        "PeerOwnerId": "333333333333",
        "PeerRegion": "us-west-2",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterDifferentOuCrossRegionIpam333333333333usWest291B2020E",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Different-OU-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering333333333333SecurityTemplateFullIpamWestVpcWorkloadARtRouteTablePeeringToSharedServicesNonTemplateIpamCentral98E79572": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "roleArn": "arn:aws:iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-west-2",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupSecurityTemplateFullIpamWest333333333333WorkloadARtDCA1199D",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering3333333333338C0EC7DC",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering333333333333SharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSecurityTemplateFullIpamWest33BBF5F5": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupSecurityTemplateFullIpamWest33333333333367DFFBC7",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterDifferentOUCrossRegionIpamVpcPeering3333333333338C0EC7DC",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering2222222222224EFA245F": {
      "Properties": {
        "PeerOwnerId": "222222222222",
        "PeerRegion": "us-west-2",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterDifferentOuCrossRegionStatic222222222222usWest2981FEC9E",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Different-OU-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering222222222222SecurityTemplateFullStaticWestVpcWorkloadARtRouteTablePeeringToSharedServicesNonTemplateStaticCentralF8E2F972": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "roleArn": "arn:aws:iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-west-2",
        "routeDefinition": {
          "DestinationCidrBlock": "172.19.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSecurityTemplateFullStaticWest222222222222WorkloadARt8C69A336",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering2222222222224EFA245F",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering3333333333338AAE4E63": {
      "Properties": {
        "PeerOwnerId": "333333333333",
        "PeerRegion": "us-west-2",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterDifferentOuCrossRegionStatic333333333333usWest2056B0A6D",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Different-OU-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering333333333333SecurityTemplateFullStaticWestVpcWorkloadARtRouteTablePeeringToSharedServicesNonTemplateStaticCentral10D824B0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "roleArn": "arn:aws:iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-west-2",
        "routeDefinition": {
          "DestinationCidrBlock": "172.19.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSecurityTemplateFullStaticWest333333333333WorkloadARt2061E87F",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterDifferentOUCrossRegionStaticVpcPeering3333333333338AAE4E63",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterDifferentOUSameRegionIpamVpcPeering222222222222CD96FF68": {
      "Properties": {
        "PeerOwnerId": "222222222222",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterDifferentOuSameRegionIpam222222222222usEast11FE6A5BC",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Different-OU-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterDifferentOUSameRegionIpamVpcPeering222222222222SecurityTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToSharedServicesNonTemplateIpamCentralC205BB74": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupSecurityTemplateFullIpamCentral222222222222WorkloadARtD50A5C23",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterDifferentOUSameRegionIpamVpcPeering222222222222CD96FF68",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterDifferentOUSameRegionIpamVpcPeering222222222222SharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSecurityTemplateFullIpam088E48C2": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupSecurityTemplateFullIpamCentral222222222222DA41D037",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterDifferentOUSameRegionIpamVpcPeering222222222222CD96FF68",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterDifferentOUSameRegionIpamVpcPeering333333333333D961F99E": {
      "Properties": {
        "PeerOwnerId": "333333333333",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterDifferentOuSameRegionIpam333333333333usEast17EB45812",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Different-OU-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterDifferentOUSameRegionIpamVpcPeering333333333333SecurityTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToSharedServicesNonTemplateIpamCentral2C29FCF3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupSecurityTemplateFullIpamCentral333333333333WorkloadARt33C6CCAC",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterDifferentOUSameRegionIpamVpcPeering333333333333D961F99E",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterDifferentOUSameRegionIpamVpcPeering333333333333SharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSecurityTemplateFullIpam30927E09": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupSecurityTemplateFullIpamCentral3333333333334D264A9C",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterDifferentOUSameRegionIpamVpcPeering333333333333D961F99E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterDifferentOUSameRegionStaticVpcPeering2222222222226A14CD92": {
      "Properties": {
        "PeerOwnerId": "222222222222",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterDifferentOuSameRegionStatic222222222222usEast11B8A8DE8",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Different-OU-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterDifferentOUSameRegionStaticVpcPeering222222222222SecurityTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToSharedServicesNonTemplateStaticCentral6880202A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::222222222222:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "172.19.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSecurityTemplateFullStaticCentral222222222222WorkloadARt937ABD41",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterDifferentOUSameRegionStaticVpcPeering2222222222226A14CD92",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterDifferentOUSameRegionStaticVpcPeering333333333333F325909D": {
      "Properties": {
        "PeerOwnerId": "333333333333",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterDifferentOuSameRegionStatic333333333333usEast1A44CF164",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Different-OU-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterDifferentOUSameRegionStaticVpcPeering333333333333SecurityTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToSharedServicesNonTemplateStaticCentral2A9FF9D0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::333333333333:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "172.19.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSecurityTemplateFullStaticCentral333333333333WorkloadARtE6079402",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterDifferentOUSameRegionStaticVpcPeering333333333333F325909D",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterSameOUHalfCrossRegionIpamVpcPeering444444444444A5FD7D4A": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterSameOuHalfCrossRegionIpam444444444444usWest21E803B50",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Half-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUHalfCrossRegionIpamVpcPeering444444444444InfraTemplateHalfIpamWestVpcWorkloadARtRouteTablePeeringToSharedServicesIpamCentral7EA46064": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "routeDefinition": {
          "DestinationCidrBlock": "172.18.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupInfraTemplateHalfIpamWest444444444444WorkloadARtA6C7FE9F",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterSameOUHalfCrossRegionIpamVpcPeering444444444444A5FD7D4A",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterSameOUHalfCrossRegionIpamVpcPeering444444444444SharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToInfraTemplateHalfIpamWestE46AD184": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupInfraTemplateHalfIpamWest444444444444A3CA0C06",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterSameOUHalfCrossRegionIpamVpcPeering444444444444A5FD7D4A",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterSameOUHalfCrossRegionStaticVpcPeering444444444444FE106DC5": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterSameOuHalfCrossRegionStatic444444444444usWest26D72B578",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Half-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUHalfCrossRegionStaticVpcPeering444444444444InfraTemplateHalfStaticWestVpcWorkloadARtRouteTablePeeringToSharedServicesStaticCentral37D80B46": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-west-2",
        "routeDefinition": {
          "DestinationCidrBlock": "172.18.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupInfraTemplateHalfStaticWest444444444444WorkloadARt4604C660",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterSameOUHalfCrossRegionStaticVpcPeering444444444444FE106DC5",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterSameOUSameRegionIpamVpcPeering444444444444CB7629A7": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUSameRegionIpamVpcPeering444444444444InfraTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToSharedServicesIpamCentralE1793AFF": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterSameOUSameRegionIpamVpcPeering444444444444CB7629A7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterSameOUSameRegionIpamVpcPeering444444444444SharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToInfraTemplateFullIpam51C2ED4D": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterSameOUSameRegionIpamVpcPeering444444444444CB7629A7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterSameOUSameRegionIpamVpcPeering55555555555545CF41EC": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterSameOuSameRegionIpam555555555555usEast1B8F60373",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUSameRegionIpamVpcPeering555555555555InfraTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToSharedServicesIpamCentral13012CC2": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupInfraTemplateFullIpamCentral555555555555WorkloadARtE480AB18",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterSameOUSameRegionIpamVpcPeering55555555555545CF41EC",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterSameOUSameRegionIpamVpcPeering555555555555SharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToInfraTemplateFullIpam6E950E3D": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupInfraTemplateFullIpamCentral555555555555F50742BF",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamCentralrouteTableNetworkNonTemplateIpamPublicidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterSameOUSameRegionIpamVpcPeering55555555555545CF41EC",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterSameOUSameRegionStaticVpcPeering4444444444445B91A91E": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUSameRegionStaticVpcPeering444444444444InfraTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToSharedServicesStaticCentral6C61AD54": {
      "Properties": {
        "DestinationCidrBlock": "172.19.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterSameOUSameRegionStaticVpcPeering4444444444445B91A91E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterSameOUSameRegionStaticVpcPeering555555555555368CB62B": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterSameOuSameRegionStatic555555555555usEast12F0A86F5",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUSameRegionStaticVpcPeering555555555555InfraTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToSharedServicesStaticCentral02799356": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "172.19.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupInfraTemplateFullStaticCentral555555555555WorkloadARt08262661",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterSameOUSameRegionStaticVpcPeering555555555555368CB62B",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateRequesterSameOUCrossRegionIpamVpcPeering497DB0ED": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-west-2",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterSameOuCrossRegionIpam555555555555usWest2818AF480",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUCrossRegionIpamVpcPeeringInfraTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToNetworkIpamWestCAD5D3FC": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkNonTemplateIpamWest555555555555E5A02EBF",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUCrossRegionIpamVpcPeering497DB0ED",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUCrossRegionStaticVpcPeering1A41D5E0": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-west-2",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-west-2",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterSameOuCrossRegionStatic555555555555usWest27D74F78B",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUCrossRegionStaticVpcPeeringInfraTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToNetworkStaticWest860870F1": {
      "Properties": {
        "DestinationCidrBlock": "172.18.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUCrossRegionStaticVpcPeering1A41D5E0",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUSameRegionIpamVpcPeeringAA899B2E": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterSameOuSameRegionIpam555555555555usEast1F4722629",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUSameRegionIpamVpcPeeringInfraTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToNetworkIpamCentral905CD683": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUSameRegionIpamVpcPeeringAA899B2E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterSameOUSameRegionIpamVpcPeeringNetworkNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToInfraTemplateFullIpam1360CEAC": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateRequesterSameOUSameRegionIpamVpcPeeringAA899B2E",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateRequesterSameOUSameRegionStaticVpcPeeringEC4F2D73": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterSameOuSameRegionStatic555555555555usEast1CF8A3A0A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Same-OU-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterSameOUSameRegionStaticVpcPeeringInfraTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToNetworkStaticCentral41CA8234": {
      "Properties": {
        "DestinationCidrBlock": "172.17.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterSameOUSameRegionStaticVpcPeeringEC4F2D73",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupWorkloadTemplateToNetworkEndpoints555555555555usEast10931CC00",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "WorkloadTemplateToNetworkEndpoints",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplateidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeeringNetworkEndpointsVpcNetworkEndpointsARouteTablePeeringRouteToWorkloadTemplate19B2980F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplatecidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkEndpoints555555555555NetworkEndpointsADC159D58",
          },
          "VpcPeeringConnectionId": {
            "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeeringNetworkEndpointsVpcNetworkEndpointsBRouteTablePeeringRouteToWorkloadTemplate426B3802": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplatecidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkEndpoints555555555555NetworkEndpointsB03E8C0E8",
          },
          "VpcPeeringConnectionId": {
            "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeeringWorkloadTemplateVpcWorkloadARtRouteTablePeeringRouteToNetworkEndpointsA455931E": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkEndpoints5555555555558C5D9A8A",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplaterouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "WorkloadTemplateToNetworkEndpointsVpcPeeringWorkloadTemplateVpcWorkloadBRtRouteTablePeeringRouteToNetworkEndpoints3AE45A7C": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkEndpoints5555555555558C5D9A8A",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcWorkloadTemplaterouteTableWorkloadBRtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "WorkloadTemplateToNetworkEndpointsVpcPeering1FE95B9F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
  },
}
`;

exports[`NetworkAssociationsStack Construct(NetworkAssociationsStack):  Snapshot Test 3`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistipv6idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/prefixList/accelerator-prefix-list-ipv6/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Ipam-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkIpamWestrouteTableNetworkWestARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Ipam-West/routeTable/Network-West-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkIpamWestrouteTableNetworkWestBRtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Ipam-West/routeTable/Network-West-B-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamWestcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamWestrouteTableNetworkNonTemplateIpamPublicWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Ipam-West/routeTable/Network-NonTemplate-Ipam-Public-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Static-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateStaticWestrouteTableNetworkNonTemplateStaticPublicWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-NonTemplate-Static-West/routeTable/Network-NonTemplate-Static-Public-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Cross account EC2 route OnEvent handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionLogGroupCFE2C9BD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator*",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
            {
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EC2RouteCreateDelete",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-555555555555-us-west-2/CrossAccountRouteFramework/CrossAccountRouteProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAcctSsmParamNonTemplateIpamCrossRegionCrossAccount444444444444usEast1VpcPeeringE5A8BD58": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "555555555555",
        "parameterAccountIds": [
          "444444444444",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/NonTemplate-Ipam-Cross-Region-Cross-Account/id",
            "value": {
              "Ref": "NonTemplateIpamCrossRegionCrossAccountVpcPeering807C9F34",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F": {
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Custom resource provider to put cross-account ssm parameter value",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameter",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmPutParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NonTemplateIpamCrossRegionCrossAccountVpcPeering807C9F34": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupNonTemplateIpamCrossRegionCrossAccount444444444444usEast110895E3A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NonTemplate-Ipam-Cross-Region-Cross-Account",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NonTemplateIpamCrossRegionCrossAccountVpcPeeringNetworkNonTemplateIpamWestVpcNetworkNonTemplateIpamPublicWestRouteTablePeeringRouteToSharedServicesIpam76884332": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupSharedServicesNonTemplateIpamCentral444444444444EB42EB71",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamWestrouteTableNetworkNonTemplateIpamPublicWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "NonTemplateIpamCrossRegionCrossAccountVpcPeering807C9F34",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "NonTemplateIpamCrossRegionCrossAccountVpcPeeringSharedServicesNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToNetworkIpamWest83880FC5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkNonTemplateIpamWestcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesNonTemplateIpamCentral444444444444NetworkNonTemplateIpamPublic4A56D994",
          },
          "VpcPeeringConnectionId": {
            "Ref": "NonTemplateIpamCrossRegionCrossAccountVpcPeering807C9F34",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-555555555555-us-west-2/version",
        "Type": "String",
        "Value": "1.11.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamLookupNonTemplateIpamCrossRegionCrossAccount444444444444usEast110895E3A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesNonTemplateIpamCentral444444444444EB42EB71": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesNonTemplateIpamCentral444444444444NetworkNonTemplateIpamPublic4A56D994": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-Central/routeTable/Network-NonTemplate-Ipam-Public/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamNonTemplateIpamCrossRegionCrossAccountVpcPeering11D71E1B": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NonTemplate-Ipam-Cross-Region-Cross-Account/id",
        "Type": "String",
        "Value": {
          "Ref": "NonTemplateIpamCrossRegionCrossAccountVpcPeering807C9F34",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-555555555555-us-west-2/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
  },
}
`;

exports[`NetworkAssociationsStack Construct(NetworkAssociationsStack):  Snapshot Test 4`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistipv6idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/prefixList/accelerator-prefix-list-ipv6/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Half-Ipam-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Half-Ipam-West/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Half-Static-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Infra-Template-Half-Static-West/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Ipam-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesIpamWestrouteTableSharedServicesARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Ipam-West/routeTable/SharedServices-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesIpamWestrouteTableSharedServicesBRtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Ipam-West/routeTable/SharedServices-B-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamWestcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-West/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamWestrouteTableNetworkNonTemplateIpamidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Ipam-West/routeTable/Network-NonTemplate-Ipam/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Static-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticWestrouteTableNetworkNonTemplateStaticPublicidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-NonTemplate-Static-West/routeTable/Network-NonTemplate-Static-Public/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Cross account EC2 route OnEvent handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionLogGroupCFE2C9BD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator*",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
            {
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EC2RouteCreateDelete",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-444444444444-us-west-2/CrossAccountRouteFramework/CrossAccountRouteProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAcctSsmParamTemplateAccepterSameOuCrossRegionIpam555555555555usEast1VpcPeering011521F7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Cross-Region-Ipam/id",
            "value": {
              "Ref": "TemplateAccepterSameOUCrossRegionIpamVpcPeering5555555555553688CCF8",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateAccepterSameOuCrossRegionStatic555555555555usEast1VpcPeeringD499A28A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "444444444444",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Cross-Region-Static/id",
            "value": {
              "Ref": "TemplateAccepterSameOUCrossRegionStaticVpcPeering555555555555B84891F5",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F": {
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-444444444444-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Custom resource provider to put cross-account ssm parameter value",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameter",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmPutParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-444444444444-us-west-2/version",
        "Type": "String",
        "Value": "1.11.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamLookupInfraTemplateFullIpamCentral444444444444WorkloadARt455D26C7": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupInfraTemplateFullIpamCentral555555555555WorkloadARtE480AB18": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupInfraTemplateFullStaticCentral444444444444WorkloadARt5EFB62FD": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupInfraTemplateFullStaticCentral555555555555WorkloadARt08262661": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/routeTable/Workload-A-Rt/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterSameOuCrossRegionIpam444444444444usEast1CF1AB78C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterSameOuCrossRegionIpam555555555555usEast1516376FB": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterSameOuCrossRegionStatic444444444444usEast14F4B8E01": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateAccepterSameOuCrossRegionStatic555555555555usEast1669D71FC": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "444444444444",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Infra-Template-Full-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-444444444444-us-west-2/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuCrossRegionIpamVpcPeering4444444444445DE408F6": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Cross-Region-Ipam/444444444444/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUCrossRegionIpamVpcPeering444444444444762C1283",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuCrossRegionIpamVpcPeering5555555555557A945D55": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Cross-Region-Ipam/555555555555/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUCrossRegionIpamVpcPeering5555555555553688CCF8",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuCrossRegionStaticVpcPeering4444444444441A39CAD1": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Cross-Region-Static/444444444444/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUCrossRegionStaticVpcPeering4444444444446F461C67",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuCrossRegionStaticVpcPeering5555555555553854248D": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Cross-Region-Static/555555555555/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUCrossRegionStaticVpcPeering555555555555B84891F5",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuHalfSameRegionIpamVpcPeering4444444444444DFA9328": {
      "DependsOn": [
        "SsmParamTemplateAccepterSameOuHalfSameRegionStaticVpcPeering444444444444533499F1",
      ],
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Half-Same-Region-Ipam/444444444444/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUHalfSameRegionIpamVpcPeering444444444444BC3EC511",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateAccepterSameOuHalfSameRegionStaticVpcPeering444444444444533499F1": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Accepter-Same-OU-Half-Same-Region-Static/444444444444/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateAccepterSameOUHalfSameRegionStaticVpcPeering444444444444197F4D3B",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "TemplateAccepterSameOUCrossRegionIpamVpcPeering444444444444762C1283": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterSameOuCrossRegionIpam444444444444usEast1CF1AB78C",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUCrossRegionIpamVpcPeering444444444444InfraTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToSharedServicesIpamWestC6F87C72": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamWestcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupInfraTemplateFullIpamCentral444444444444WorkloadARt455D26C7",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterSameOUCrossRegionIpamVpcPeering444444444444762C1283",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterSameOUCrossRegionIpamVpcPeering5555555555553688CCF8": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterSameOuCrossRegionIpam555555555555usEast1516376FB",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUCrossRegionIpamVpcPeering555555555555InfraTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToSharedServicesIpamWest3184BD2E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamWestcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupInfraTemplateFullIpamCentral555555555555WorkloadARtE480AB18",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterSameOUCrossRegionIpamVpcPeering5555555555553688CCF8",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterSameOUCrossRegionStaticVpcPeering4444444444446F461C67": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterSameOuCrossRegionStatic444444444444usEast14F4B8E01",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUCrossRegionStaticVpcPeering444444444444InfraTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToSharedServicesStaticWestCEC97436": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "172.20.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupInfraTemplateFullStaticCentral444444444444WorkloadARt5EFB62FD",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterSameOUCrossRegionStaticVpcPeering4444444444446F461C67",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterSameOUCrossRegionStaticVpcPeering555555555555B84891F5": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateAccepterSameOuCrossRegionStatic555555555555usEast1669D71FC",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUCrossRegionStaticVpcPeering555555555555InfraTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToSharedServicesStaticWest7071C429": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "172.20.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupInfraTemplateFullStaticCentral555555555555WorkloadARt08262661",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateAccepterSameOUCrossRegionStaticVpcPeering555555555555B84891F5",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateAccepterSameOUHalfSameRegionIpamVpcPeering444444444444BC3EC511": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Half-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUHalfSameRegionIpamVpcPeering444444444444InfraTemplateHalfIpamWestVpcWorkloadARtRouteTablePeeringToSharedServicesIpamWestBAF08B40": {
      "Properties": {
        "DestinationCidrBlock": "172.19.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfIpamWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterSameOUHalfSameRegionIpamVpcPeering444444444444BC3EC511",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateAccepterSameOUHalfSameRegionStaticVpcPeering444444444444197F4D3B": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-west-2",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Accepter-Same-OU-Half-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesNonTemplateStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateAccepterSameOUHalfSameRegionStaticVpcPeering444444444444InfraTemplateHalfStaticWestVpcWorkloadARtRouteTablePeeringToSharedServicesStaticWestC66E3DFA": {
      "Properties": {
        "DestinationCidrBlock": "172.19.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcInfraTemplateHalfStaticWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateAccepterSameOUHalfSameRegionStaticVpcPeering444444444444197F4D3B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
  },
}
`;

exports[`NetworkAssociationsStack Construct(NetworkAssociationsStack):  Snapshot Test 5`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/cloudwatch/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratorkmslambdakeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/lambda/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Static-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Static-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Cross account EC2 route OnEvent handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionLogGroupCFE2C9BD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator*",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
            {
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EC2RouteCreateDelete",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-222222222222-us-east-1/CrossAccountRouteFramework/CrossAccountRouteProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAcctSsmParamTemplateRequesterDifferentOuSameRegionIpam555555555555usEast1VpcPeeringF6946553": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "222222222222",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Same-Region-Ipam/id",
            "value": {
              "Ref": "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateRequesterDifferentOuSameRegionStatic555555555555usEast1VpcPeering726A6092": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "222222222222",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Same-Region-Static/id",
            "value": {
              "Ref": "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringD323C329",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetResourceShareCustomResourceProviderHandler5DB0EF7A": {
      "DependsOn": [
        "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ram:AcceptResourceShareInvitation",
                    "ram:GetResourceShareInvitations",
                    "ram:GetResourceShares",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B": {
      "DependsOn": [
        "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetResourceShareItemCustomResourceProviderLogGroup6DB08FC0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ram:ListResources",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC": {
      "DependsOn": [
        "CustomShareSubnetTagsCustomResourceProviderRole2582495C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomShareSubnetTagsCustomResourceProviderRole2582495C",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomShareSubnetTagsCustomResourceProviderLogGroupA1F3F80A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomShareSubnetTagsCustomResourceProviderRole2582495C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DeleteTags",
                    "ec2:CreateTags",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":*:subnet/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":*:vpc/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "ec2:DescribeTags",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeSubnets",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:PutParameter",
                    "ssm:DeleteParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F": {
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Custom resource provider to put cross-account ssm parameter value",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameter",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmPutParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NetworkEndpointsdeployedtg24EF1CE27": {
      "Properties": {
        "HealthCheckEnabled": true,
        "Matcher": {},
        "Name": "deployed-tg-2",
        "Port": 443,
        "Protocol": "HTTPS",
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployed-tg-2",
          },
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ShareSubnetTagsSharedServicesSharedServicesAppAB0C78353": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomShareSubnetTagsCustomResourceProviderLogGroupA1F3F80A",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC",
            "Arn",
          ],
        },
        "acceleratorSsmParamPrefix": "/accelerator",
        "sharedSubnetId": {
          "Ref": "SharedServicesMainSharedServicesAppASubnet7C8410E5",
        },
        "sharedSubnetName": "SharedServices-App-A",
        "subnetTags": [
          {
            "key": "Name",
            "value": "SharedServices-App-A",
          },
        ],
        "vpcName": "SharedServices-Main",
        "vpcTags": [
          {
            "key": "Name",
            "value": "SharedServices-Main",
          },
        ],
      },
      "Type": "Custom::ShareSubnetTags",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainSharedServicesAppASubnet7C8410E5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetResourceShareItemCustomResourceProviderLogGroup6DB08FC0",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B",
            "Arn",
          ],
        },
        "resourceOwner": "OTHER-ACCOUNTS",
        "resourceShareArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ram:us-east-1:444444444444:resource-share/",
              {
                "Ref": "SharedServicesMainSharedServicesAppASubnetShareC6E132FE",
              },
            ],
          ],
        },
        "resourceType": "ec2:Subnet",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetResourceShareItem",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainSharedServicesAppASubnetShareC6E132FE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetResourceShareCustomResourceProviderHandler5DB0EF7A",
            "Arn",
          ],
        },
        "name": "SharedServices-App-A_SubnetShare",
        "owningAccountId": "444444444444",
        "resourceOwner": "OTHER-ACCOUNTS",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetResourceShare",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainVpcSharedServicesMainRsyslogSgSg82BD8A5A": {
      "Properties": {
        "GroupDescription": "Security Group for AWS Accelerator rsyslog",
        "GroupName": "SharedServices-Main-Rsyslog-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "All Outbound",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "allow inbound traffic",
            "FromPort": 514,
            "IpProtocol": "tcp",
            "ToPort": 514,
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "allow inbound traffic",
            "FromPort": 514,
            "IpProtocol": "udp",
            "ToPort": 514,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "SharedServices-Main-Rsyslog-sg",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-222222222222-us-east-1/version",
        "Type": "String",
        "Value": "1.11.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "222222222222",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "222222222222",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/routeTable/Network-NonTemplate-Ipam-Public/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterDifferentOuSameRegionIpam555555555555usEast1C4A190F9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "222222222222",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterDifferentOuSameRegionStatic555555555555usEast1A0EFF795": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "222222222222",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamSharedServicesMainSharedServicesMainRsyslogSgSecurityGroupFCDC7FBA": {
      "Properties": {
        "Name": "/accelerator/network/vpc/SharedServices-Main/securityGroup/SharedServices-Main-Rsyslog-sg/id",
        "Type": "String",
        "Value": {
          "Ref": "SharedServicesMainVpcSharedServicesMainRsyslogSgSg82BD8A5A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-222222222222-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterDifferentOuSameRegionIpamVpcPeeringEDE74F2C": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Same-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterDifferentOuSameRegionStaticVpcPeering73135AF0": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Same-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringD323C329",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterDifferentOuSameRegionIpam555555555555usEast1C4A190F9",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Different-OU-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringNetworkNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSecurityTemplateFullIpam06CF1467": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringSecurityTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToNetworkNonTemplateIpamCentralD3798570": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringD323C329": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterDifferentOuSameRegionStatic555555555555usEast1A0EFF795",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Different-OU-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringSecurityTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToNetworkNonTemplateStaticCentral784A0C5C": {
      "Properties": {
        "DestinationCidrBlock": "172.17.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringD323C329",
        },
      },
      "Type": "AWS::EC2::Route",
    },
  },
}
`;

exports[`NetworkAssociationsStack Construct(NetworkAssociationsStack):  Snapshot Test 6`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Static-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Static-West/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Cross account EC2 route OnEvent handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionLogGroupCFE2C9BD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator*",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
            {
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EC2RouteCreateDelete",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-222222222222-us-west-2/CrossAccountRouteFramework/CrossAccountRouteProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAcctSsmParamTemplateRequesterDifferentOuCrossRegionIpam555555555555usEast1VpcPeering2A057E1C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "222222222222",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Cross-Region-Ipam/id",
            "value": {
              "Ref": "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateRequesterDifferentOuCrossRegionStatic555555555555usEast1VpcPeering7CFC47AA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "222222222222",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Cross-Region-Static/id",
            "value": {
              "Ref": "TemplateRequesterDifferentOUCrossRegionStaticVpcPeering6B00FFE7",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F": {
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-222222222222-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Custom resource provider to put cross-account ssm parameter value",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameter",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmPutParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-222222222222-us-west-2/version",
        "Type": "String",
        "Value": "1.11.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "222222222222",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "222222222222",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/routeTable/Network-NonTemplate-Ipam-Public/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterDifferentOuCrossRegionIpam555555555555usEast1FBDC1655": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "222222222222",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterDifferentOuCrossRegionStatic555555555555usEast13AC2A605": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "222222222222",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-222222222222-us-west-2/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterDifferentOuCrossRegionIpamVpcPeering0CD6A423": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Cross-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterDifferentOuCrossRegionStaticVpcPeering3BC01FF1": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Cross-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterDifferentOUCrossRegionStaticVpcPeering6B00FFE7",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterDifferentOuCrossRegionIpam555555555555usEast1FBDC1655",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Different-OU-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterDifferentOUCrossRegionIpamVpcPeeringNetworkNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSecurityTemplateFullIpamWest33387A80": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateRequesterDifferentOUCrossRegionIpamVpcPeeringSecurityTemplateFullIpamWestVpcWorkloadARtRouteTablePeeringToNetworkNonTemplateIpamCentral1CBB7D9C": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterDifferentOUCrossRegionStaticVpcPeering6B00FFE7": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterDifferentOuCrossRegionStatic555555555555usEast13AC2A605",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Different-OU-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterDifferentOUCrossRegionStaticVpcPeeringSecurityTemplateFullStaticWestVpcWorkloadARtRouteTablePeeringToNetworkNonTemplateStaticCentral4FCB334A": {
      "Properties": {
        "DestinationCidrBlock": "172.17.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterDifferentOUCrossRegionStaticVpcPeering6B00FFE7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
  },
}
`;

exports[`NetworkAssociationsStack Construct(NetworkAssociationsStack):  Snapshot Test 7`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/cloudwatch/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratorkmslambdakeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/lambda/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Static-Central/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Static-Central/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSharedServicesMainidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/SharedServices-Main/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Cross account EC2 route OnEvent handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionLogGroupCFE2C9BD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator*",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
            {
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EC2RouteCreateDelete",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-333333333333-us-east-1/CrossAccountRouteFramework/CrossAccountRouteProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAcctSsmParamTemplateRequesterDifferentOuSameRegionIpam555555555555usEast1VpcPeeringF6946553": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "333333333333",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Same-Region-Ipam/id",
            "value": {
              "Ref": "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateRequesterDifferentOuSameRegionStatic555555555555usEast1VpcPeering726A6092": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "333333333333",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Same-Region-Static/id",
            "value": {
              "Ref": "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringD323C329",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetResourceShareCustomResourceProviderHandler5DB0EF7A": {
      "DependsOn": [
        "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetResourceShareCustomResourceProviderRoleBC3FCEEF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ram:AcceptResourceShareInvitation",
                    "ram:GetResourceShareInvitations",
                    "ram:GetResourceShares",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B": {
      "DependsOn": [
        "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetResourceShareItemCustomResourceProviderLogGroup6DB08FC0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetResourceShareItemCustomResourceProviderRoleA7181EBA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ram:ListResources",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC": {
      "DependsOn": [
        "CustomShareSubnetTagsCustomResourceProviderRole2582495C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomShareSubnetTagsCustomResourceProviderRole2582495C",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomShareSubnetTagsCustomResourceProviderLogGroupA1F3F80A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomShareSubnetTagsCustomResourceProviderRole2582495C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DeleteTags",
                    "ec2:CreateTags",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":*:subnet/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":*:vpc/*",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "ec2:DescribeTags",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeSubnets",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:PutParameter",
                    "ssm:DeleteParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F": {
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Custom resource provider to put cross-account ssm parameter value",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameter",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmPutParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NetworkEndpointsdeployedtg24EF1CE27": {
      "Properties": {
        "HealthCheckEnabled": true,
        "Matcher": {},
        "Name": "deployed-tg-2",
        "Port": 443,
        "Protocol": "HTTPS",
        "Tags": [
          {
            "Key": "Name",
            "Value": "deployed-tg-2",
          },
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ShareSubnetTagsSharedServicesSharedServicesAppAB0C78353": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomShareSubnetTagsCustomResourceProviderLogGroupA1F3F80A",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomShareSubnetTagsCustomResourceProviderHandler4A04C5EC",
            "Arn",
          ],
        },
        "acceleratorSsmParamPrefix": "/accelerator",
        "sharedSubnetId": {
          "Ref": "SharedServicesMainSharedServicesAppASubnet7C8410E5",
        },
        "sharedSubnetName": "SharedServices-App-A",
        "subnetTags": [
          {
            "key": "Name",
            "value": "SharedServices-App-A",
          },
        ],
        "vpcName": "SharedServices-Main",
        "vpcTags": [
          {
            "key": "Name",
            "value": "SharedServices-Main",
          },
        ],
      },
      "Type": "Custom::ShareSubnetTags",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainSharedServicesAppASubnet7C8410E5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetResourceShareItemCustomResourceProviderLogGroup6DB08FC0",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetResourceShareItemCustomResourceProviderHandlerE72D791B",
            "Arn",
          ],
        },
        "resourceOwner": "OTHER-ACCOUNTS",
        "resourceShareArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ram:us-east-1:444444444444:resource-share/",
              {
                "Ref": "SharedServicesMainSharedServicesAppASubnetShareC6E132FE",
              },
            ],
          ],
        },
        "resourceType": "ec2:Subnet",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetResourceShareItem",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainSharedServicesAppASubnetShareC6E132FE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetResourceShareCustomResourceProviderHandler5DB0EF7A",
            "Arn",
          ],
        },
        "name": "SharedServices-App-A_SubnetShare",
        "owningAccountId": "444444444444",
        "resourceOwner": "OTHER-ACCOUNTS",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetResourceShare",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainVpcSharedServicesMainRsyslogSgSg82BD8A5A": {
      "Properties": {
        "GroupDescription": "Security Group for AWS Accelerator rsyslog",
        "GroupName": "SharedServices-Main-Rsyslog-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "All Outbound",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "allow inbound traffic",
            "FromPort": 514,
            "IpProtocol": "tcp",
            "ToPort": 514,
          },
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "allow inbound traffic",
            "FromPort": 514,
            "IpProtocol": "udp",
            "ToPort": 514,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "SharedServices-Main-Rsyslog-sg",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSharedServicesMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-333333333333-us-east-1/version",
        "Type": "String",
        "Value": "1.11.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/routeTable/Network-NonTemplate-Ipam-Public/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterDifferentOuSameRegionIpam555555555555usEast1C4A190F9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterDifferentOuSameRegionStatic555555555555usEast1A0EFF795": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamSharedServicesMainSharedServicesMainRsyslogSgSecurityGroupFCDC7FBA": {
      "Properties": {
        "Name": "/accelerator/network/vpc/SharedServices-Main/securityGroup/SharedServices-Main-Rsyslog-sg/id",
        "Type": "String",
        "Value": {
          "Ref": "SharedServicesMainVpcSharedServicesMainRsyslogSgSg82BD8A5A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-333333333333-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterDifferentOuSameRegionIpamVpcPeeringEDE74F2C": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Same-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterDifferentOuSameRegionStaticVpcPeering73135AF0": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Same-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringD323C329",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterDifferentOuSameRegionIpam555555555555usEast1C4A190F9",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Different-OU-Same-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringNetworkNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSecurityTemplateFullIpam06CF1467": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringSecurityTemplateFullIpamCentralVpcWorkloadARtRouteTablePeeringToNetworkNonTemplateIpamCentralD3798570": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterDifferentOUSameRegionIpamVpcPeeringD0B127A5",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringD323C329": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterDifferentOuSameRegionStatic555555555555usEast1A0EFF795",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Different-OU-Same-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticCentralidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringSecurityTemplateFullStaticCentralVpcWorkloadARtRouteTablePeeringToNetworkNonTemplateStaticCentral784A0C5C": {
      "Properties": {
        "DestinationCidrBlock": "172.17.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticCentralrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterDifferentOUSameRegionStaticVpcPeeringD323C329",
        },
      },
      "Type": "AWS::EC2::Route",
    },
  },
}
`;

exports[`NetworkAssociationsStack Construct(NetworkAssociationsStack):  Snapshot Test 8`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/cidr/ipv4",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Ipam-West/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Static-West/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Security-Template-Full-Static-West/routeTable/Workload-A-Rt/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Cross account EC2 route OnEvent handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionLogGroupCFE2C9BD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator*",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
            {
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EC2RouteCreateDelete",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-333333333333-us-west-2/CrossAccountRouteFramework/CrossAccountRouteProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAcctSsmParamTemplateRequesterDifferentOuCrossRegionIpam555555555555usEast1VpcPeering2A057E1C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "333333333333",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Cross-Region-Ipam/id",
            "value": {
              "Ref": "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamTemplateRequesterDifferentOuCrossRegionStatic555555555555usEast1VpcPeering7CFC47AA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "333333333333",
        "parameterAccountIds": [
          "555555555555",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Cross-Region-Static/id",
            "value": {
              "Ref": "TemplateRequesterDifferentOUCrossRegionStaticVpcPeering6B00FFE7",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F": {
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-333333333333-us-west-2",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Custom resource provider to put cross-account ssm parameter value",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameter",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmPutParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-333333333333-us-west-2/version",
        "Type": "String",
        "Value": "1.11.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/cidr/ipv4",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/routeTable/Network-NonTemplate-Ipam-Public/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterDifferentOuCrossRegionIpam555555555555usEast1FBDC1655": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Ipam-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupTemplateRequesterDifferentOuCrossRegionStatic555555555555usEast13AC2A605": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "333333333333",
        "invokingRegion": "us-west-2",
        "parameterAccountID": "555555555555",
        "parameterName": "/accelerator/network/vpc/Network-NonTemplate-Static-Central/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-333333333333-us-west-2/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterDifferentOuCrossRegionIpamVpcPeering0CD6A423": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Cross-Region-Ipam/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamTemplateRequesterDifferentOuCrossRegionStaticVpcPeering3BC01FF1": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/Template-Requester-Different-OU-Cross-Region-Static/id",
        "Type": "String",
        "Value": {
          "Ref": "TemplateRequesterDifferentOUCrossRegionStaticVpcPeering6B00FFE7",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterDifferentOuCrossRegionIpam555555555555usEast1FBDC1655",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Different-OU-Cross-Region-Ipam",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterDifferentOUCrossRegionIpamVpcPeeringNetworkNonTemplateIpamCentralVpcNetworkNonTemplateIpamPublicRouteTablePeeringRouteToSecurityTemplateFullIpamWest33387A80": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": {
            "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestcidripv4C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "RouteTableId": {
            "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555NetworkNonTemplateIpamPublicCE54EFA8",
          },
          "VpcPeeringConnectionId": {
            "Ref": "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "TemplateRequesterDifferentOUCrossRegionIpamVpcPeeringSecurityTemplateFullIpamWestVpcWorkloadARtRouteTablePeeringToNetworkNonTemplateIpamCentral1CBB7D9C": {
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "SsmParamLookupNetworkNonTemplateIpamCentral555555555555429F8B6C",
        },
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullIpamWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterDifferentOUCrossRegionIpamVpcPeering8DC29E1A",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TemplateRequesterDifferentOUCrossRegionStaticVpcPeering6B00FFE7": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::555555555555:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupTemplateRequesterDifferentOuCrossRegionStatic555555555555usEast13AC2A605",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Template-Requester-Different-OU-Cross-Region-Static",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticWestidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "TemplateRequesterDifferentOUCrossRegionStaticVpcPeeringSecurityTemplateFullStaticWestVpcWorkloadARtRouteTablePeeringToNetworkNonTemplateStaticCentral4FCB334A": {
      "Properties": {
        "DestinationCidrBlock": "172.17.0.0/24",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcSecurityTemplateFullStaticWestrouteTableWorkloadARtidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "TemplateRequesterDifferentOUCrossRegionStaticVpcPeering6B00FFE7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
  },
}
`;

exports[`NoVpcFlowLogStack Construct(NetworkAssociationsStack):  Snapshot Test 1`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/cloudwatch/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratorkmslambdakeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/lambda/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkdirectConnectGatewaysNetworkDXGWidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/directConnectGateways/Network-DXGW/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/prefixList/accelerator-prefix-list/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverfirewallruleGroupsacceleratorblockgroupidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/firewall/ruleGroups/accelerator-block-group/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsacceleratorquerylogscwlidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/queryLogConfigs/accelerator-query-logs-cwl/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsacceleratorquerylogss3idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/queryLogConfigs/accelerator-query-logs-s3/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkroute53ResolverrulesexampleruleidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/route53Resolver/rules/example-rule/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/routeTables/Network-Main-Core/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/routeTables/Network-Main-Segregated/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/routeTables/Network-Main-Shared/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainStandaloneidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/transitGateways/Network-Main/routeTables/Network-Main-Standalone/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsalbappAalb01idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/alb/appA-alb-01/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsnetworkAclTestNACLidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/networkAcl/TestNACL/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsnlbappAnlb01idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/nlb/appA-nlb-01/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneec2idC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/ec2/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneec2messagesidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/ec2messages/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonekmsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/kms/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonelogsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/logs/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonessmidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/ssm/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonessmmessagesidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/route53/hostedZone/ssmmessages/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsTgwAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-Tgw-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsTgwBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/routeTable/Network-Endpoints-Tgw-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Endpoints/transitGatewayAttachment/Network-Endpoints/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionGatewayidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-Gateway/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionTgwAidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-Tgw-A/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectionrouteTableNetworkInspectionTgwBidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/routeTable/Network-Inspection-Tgw-B/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/network/vpc/Network-Inspection/transitGatewayAttachment/Network-Inspection/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AcceleratorVpnNetworkMainCoreAssociationEF397C51": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "AcceleratorVpnVpnTransitGatewayAttachmentFBF8EE77",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "AcceleratorVpnNetworkMainCorePropagation585EB5AE": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "AcceleratorVpnVpnTransitGatewayAttachmentFBF8EE77",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "AcceleratorVpnVpnTransitGatewayAttachmentFBF8EE77": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetTransitGatewayAttachmentCustomResourceProviderLogGroup41699CF3",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354",
            "Arn",
          ],
        },
        "name": "accelerator-vpn",
        "region": "us-east-1",
        "transitGatewayId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "type": "vpn",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetTransitGatewayAttachment",
      "UpdateReplacePolicy": "Delete",
    },
    "AssociateHostedZonesF0E2F0DA": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomRoute53AssociateHostedZonesCustomResourceProviderLogGroupDEA7760D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomRoute53AssociateHostedZonesCustomResourceProviderHandler1296DB71",
            "Arn",
          ],
        },
        "accountIds": [
          "555555555555",
          "444444444444",
        ],
        "hostedZoneAccountId": "555555555555",
        "hostedZoneIds": [
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneec2idC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZoneec2messagesidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonessmidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonessmmessagesidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonekmsidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsroute53hostedZonelogsidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        ],
        "partition": {
          "Ref": "AWS::Partition",
        },
        "region": "us-east-1",
        "roleName": "AWSAccelerator-EnableCentralEndpointsRole-us-east-1",
        "tagFilters": [
          {
            "key": "accelerator:use-central-endpoints",
            "value": "true",
          },
          {
            "key": "accelerator:central-endpoints-account-id",
            "value": "555555555555",
          },
        ],
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::Route53AssociateHostedZones",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Cross account EC2 route OnEvent handler",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionLogGroupCFE2C9BD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/AWSAccelerator*",
                  ],
                ],
              },
              "Sid": "StsAssumeRole",
            },
            {
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "EC2RouteCreateDelete",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRoleDefaultPolicy2CB6E8A9",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteFunctionServiceRole0BC7B615",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC": {
      "DependsOn": [
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-NetworkAssociationsStack-555555555555-us-east-1/CrossAccountRouteFramework/CrossAccountRouteProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Custom resource provider requires access to assume cross-account role",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CrossAccountRouteFrameworkCrossAccountRouteFunctionAFDC4801",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleDefaultPolicyDBD57C1E",
        "Roles": [
          {
            "Ref": "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventServiceRoleED507AC0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "Custom resource provider requires managed policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountVpcPeering9E0C69A2": {
      "Properties": {
        "PeerOwnerId": "444444444444",
        "PeerRegion": "us-east-1",
        "PeerRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "PeerVpcId": {
          "Ref": "SsmParamLookupCrossAccount444444444444usEast13BE87606",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CrossAccount",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "CrossAccountVpcPeeringNetworkEndpointsVpcNetworkEndpointsARouteTableVpcPeer338649DC": {
      "Properties": {
        "DestinationCidrBlock": "10.4.0.0/16",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsAidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "CrossAccountVpcPeering9E0C69A2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CrossAccountVpcPeeringNetworkEndpointsVpcNetworkEndpointsBRouteTableVpcPeer7B5320E6": {
      "Properties": {
        "DestinationCidrBlock": "10.4.0.0/16",
        "RouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsrouteTableNetworkEndpointsBidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VpcPeeringConnectionId": {
          "Ref": "CrossAccountVpcPeering9E0C69A2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CrossAccountVpcPeeringSharedServicesMainVpcSharedServicesAppARouteTableVpcPeer94525782": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "10.0.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesMain444444444444SharedServicesAppA08A11B17",
          },
          "VpcPeeringConnectionId": {
            "Ref": "CrossAccountVpcPeering9E0C69A2",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountVpcPeeringSharedServicesMainVpcSharedServicesAppBRouteTableVpcPeer02D33BA6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CrossAccountRouteFrameworkCrossAccountRouteProviderframeworkonEventE7CF8ACC",
            "Arn",
          ],
        },
        "region": "us-east-1",
        "roleArn": "arn:aws:iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
        "routeDefinition": {
          "DestinationCidrBlock": "10.0.0.0/24",
          "RouteTableId": {
            "Ref": "SsmParamLookupSharedServicesMain444444444444SharedServicesAppB580D7687",
          },
          "VpcPeeringConnectionId": {
            "Ref": "CrossAccountVpcPeering9E0C69A2",
          },
        },
      },
      "Type": "Custom::CrossAccountRoute",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAcctSsmParamCrossAccount444444444444usEast1VpcPeeringAB27C776": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
            "Arn",
          ],
        },
        "invokingAccountId": "555555555555",
        "parameterAccountIds": [
          "444444444444",
        ],
        "parameters": [
          {
            "name": "/accelerator/network/vpcPeering/CrossAccount/id",
            "value": {
              "Ref": "CrossAccountVpcPeering9E0C69A2",
            },
          },
        ],
        "region": "us-east-1",
        "roleName": "AWSAccelerator-CrossAccountSsmParameterShare",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmPutParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomDirectConnectGatewayAssociationCustomResourceProviderHandler3BC99D92": {
      "DependsOn": [
        "CustomDirectConnectGatewayAssociationCustomResourceProviderRole7D012188",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomDirectConnectGatewayAssociationCustomResourceProviderRole7D012188",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomDirectConnectGatewayAssociationCustomResourceProviderLogGroup966224A3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomDirectConnectGatewayAssociationCustomResourceProviderHandler3BC99D92",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomDirectConnectGatewayAssociationCustomResourceProviderRole7D012188": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "directconnect:CreateDirectConnectGatewayAssociation",
                    "directconnect:DeleteDirectConnectGatewayAssociation",
                    "directconnect:DescribeDirectConnectGatewayAssociations",
                    "directconnect:UpdateDirectConnectGatewayAssociation",
                    "ec2:DescribeTransitGatewayAttachments",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "DirectConnectGatewayCRUD",
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":function:AWSAccelerator-NetworkAss-CustomDirectConnect*",
                      ],
                    ],
                  },
                  "Sid": "InvokeSelf",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354": {
      "DependsOn": [
        "CustomGetTransitGatewayAttachmentCustomResourceProviderRoleA6A22C3D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomGetTransitGatewayAttachmentCustomResourceProviderRoleA6A22C3D",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomGetTransitGatewayAttachmentCustomResourceProviderLogGroup41699CF3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomGetTransitGatewayAttachmentCustomResourceProviderRoleA6A22C3D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ec2:DescribeTransitGatewayAttachments",
                    "ec2:DescribeVpnConnections",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomRoute53AssociateHostedZonesCustomResourceProviderHandler1296DB71": {
      "DependsOn": [
        "CustomRoute53AssociateHostedZonesCustomResourceProviderRole17C82AD6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "CustomRoute53AssociateHostedZonesCustomResourceProviderRole17C82AD6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomRoute53AssociateHostedZonesCustomResourceProviderLogGroupDEA7760D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomRoute53AssociateHostedZonesCustomResourceProviderHandler1296DB71",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomRoute53AssociateHostedZonesCustomResourceProviderRole17C82AD6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeVpcs",
                    "route53:AssociateVPCWithHostedZone",
                    "route53:CreateVPCAssociationAuthorization",
                    "route53:DeleteVPCAssociationAuthorization",
                    "route53:GetHostedZone",
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "Route53AssociateHostedZonesActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F": {
      "DependsOn": [
        "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Custom resource provider to put cross-account ssm parameter value",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmPutParameterValueCustomResourceProviderLogGroupB0109C68": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmPutParameterValueCustomResourceProviderHandler2A0BDE7F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmPutParameterValueCustomResourceProviderRole9E1F101A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DeleteParameter",
                    "ssm:PutParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmPutParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3": {
      "DependsOn": [
        "CustomTransitGatewayPrefixListReferenceCustomResourceProviderRoleC5D4C080",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-555555555555-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomTransitGatewayPrefixListReferenceCustomResourceProviderRoleC5D4C080",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomTransitGatewayPrefixListReferenceCustomResourceProviderLogGroupBC9F3669": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomTransitGatewayPrefixListReferenceCustomResourceProviderRoleC5D4C080": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:CreateTransitGatewayPrefixListReference",
                    "ec2:ModifyTransitGatewayPrefixListReference",
                    "ec2:DeleteTransitGatewayPrefixListReference",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowModifyTgwReferences",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListenerNetworkEndpointsappAAlb01appAListener2": {
      "Properties": {
        "Certificates": [
          {},
        ],
        "DefaultActions": [
          {
            "ForwardConfig": {
              "TargetGroups": [
                {
                  "TargetGroupArn": {
                    "Ref": "NetworkEndpointsappAalbtg176E11B7D",
                  },
                },
              ],
            },
            "TargetGroupArn": {
              "Ref": "NetworkEndpointsappAalbtg176E11B7D",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsalbappAalb01idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ListenerNetworkEndpointsappANlb01appAListener1": {
      "Properties": {
        "AlpnPolicy": [],
        "Certificates": [
          {},
        ],
        "DefaultActions": [
          {
            "ForwardConfig": {
              "TargetGroups": [
                {
                  "TargetGroupArn": {
                    "Ref": "NetworkEndpointsappAnlbtg19C910FB9",
                  },
                },
              ],
            },
            "TargetGroupArn": {
              "Ref": "NetworkEndpointsappAnlbtg19C910FB9",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsnlbappAnlb01idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Port": 80,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "NetworkDxgwNetworkMainCoreAssociation1B0096A1": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Fn::GetAtt": [
            "NetworkDxgwNetworkMainDxGatewayAssociationF3E8BC9A",
            "TransitGatewayAttachmentId",
          ],
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "NetworkDxgwNetworkMainCorePropagation959338BE": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Fn::GetAtt": [
            "NetworkDxgwNetworkMainDxGatewayAssociationF3E8BC9A",
            "TransitGatewayAttachmentId",
          ],
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkDxgwNetworkMainDxGatewayAssociationF3E8BC9A": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomDirectConnectGatewayAssociationCustomResourceProviderLogGroup966224A3",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDirectConnectGatewayAssociationCustomResourceProviderHandler3BC99D92",
            "Arn",
          ],
        },
        "allowedPrefixes": [
          "10.0.0.0/8",
          "192.168.0.0/16",
        ],
        "directConnectGatewayId": {
          "Ref": "SsmParameterValueacceleratornetworkdirectConnectGatewaysNetworkDXGWidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "gatewayId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "Custom::DirectConnectGatewayAssociation",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkEndpointsNetworkMainCorePropagationB71504FB": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkEndpointsNetworkMainSegregatedPropagation126AD34C": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkEndpointsNetworkMainSharedAssociation32A1E778": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "NetworkEndpointsNetworkMainSharedPropagationB52F1A2C": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkEndpointsToInspectionVpcPeeringE81AF602": {
      "Properties": {
        "PeerOwnerId": "555555555555",
        "PeerRegion": "us-east-1",
        "PeerVpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NetworkEndpointsToInspection",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::VPCPeeringConnection",
    },
    "NetworkEndpointsacceleratorBlockGroupRuleGroupAssociation1AF8FC15": {
      "Properties": {
        "FirewallRuleGroupId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverfirewallruleGroupsacceleratorblockgroupidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Priority": 101,
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::FirewallRuleGroupAssociation",
    },
    "NetworkEndpointsacceleratorQueryLogsCwlQueryLogAssociationEA44BB29": {
      "Properties": {
        "ResolverQueryLogConfigId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsacceleratorquerylogscwlidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "ResourceId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
    },
    "NetworkEndpointsacceleratorQueryLogsS3QueryLogAssociationC248D059": {
      "Properties": {
        "ResolverQueryLogConfigId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverqueryLogConfigsacceleratorquerylogss3idC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "ResourceId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
    },
    "NetworkEndpointsappAalbtg176E11B7D": {
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "HTTP",
        "Matcher": {},
        "Name": "appA-alb-tg-1",
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "Name",
            "Value": "appA-alb-tg-1",
          },
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "NetworkEndpointsappAnlbtg19C910FB9": {
      "Properties": {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "TCP",
        "Matcher": {},
        "Name": "appA-nlb-tg-1",
        "Port": 80,
        "Protocol": "TCP",
        "Tags": [
          {
            "Key": "Name",
            "Value": "appA-nlb-tg-1",
          },
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "NetworkEndpointsexampleRuleRuleAssociationB302A795": {
      "Properties": {
        "ResolverRuleId": {
          "Ref": "SsmParameterValueacceleratornetworkroute53ResolverrulesexampleruleidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "VPCId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::Route53Resolver::ResolverRuleAssociation",
    },
    "NetworkInspectionNetworkMainCorePropagation37D40A21": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkInspectionNetworkMainSegregatedPropagationA07EB35C": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkInspectionNetworkMainSharedAssociationC5D467EA": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "NetworkInspectionNetworkMainSharedPropagation9C8183A3": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkInspectiontransitGatewayAttachmentNetworkInspectionidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "NetworkMainCore101000016NetworkEndpointsNetworkStaticRouteEC325B8C": {
      "Properties": {
        "DestinationCidrBlock": "10.100.0.0/16",
        "TransitGatewayAttachmentId": {
          "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainCore102000016NetworkDXGWStaticRoute7BFECA73": {
      "Properties": {
        "DestinationCidrBlock": "10.200.0.0/16",
        "TransitGatewayAttachmentId": {
          "Fn::GetAtt": [
            "NetworkDxgwNetworkMainDxGatewayAssociationF3E8BC9A",
            "TransitGatewayAttachmentId",
          ],
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainCore103000016acceleratorvpnStaticRoute674FF3C8": {
      "Properties": {
        "DestinationCidrBlock": "10.300.0.0/16",
        "TransitGatewayAttachmentId": {
          "Ref": "AcceleratorVpnVpnTransitGatewayAttachmentFBF8EE77",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainCore111132blackholeStaticRouteEF8CDB96": {
      "Properties": {
        "Blackhole": true,
        "DestinationCidrBlock": "1.1.1.1/32",
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkMainCoreacceleratorPrefixListNetworkEndpointsNetwork3EFFBC42": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomTransitGatewayPrefixListReferenceCustomResourceProviderLogGroupBC9F3669",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomTransitGatewayPrefixListReferenceCustomResourceProviderHandler9BAD63E3",
            "Arn",
          ],
        },
        "prefixListReference": {
          "PrefixListId": {
            "Ref": "SsmParameterValueacceleratornetworkprefixListacceleratorprefixlistidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "TransitGatewayAttachmentId": {
            "Ref": "SsmParameterValueacceleratornetworkvpcNetworkEndpointstransitGatewayAttachmentNetworkEndpointsidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "TransitGatewayRouteTableId": {
            "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
          },
        },
      },
      "Type": "Custom::TransitGatewayPrefixListReference",
      "UpdateReplacePolicy": "Delete",
    },
    "NetworkMainShared102000016NetworkMainAndSharedServicesMainPeeringStaticRoute6433AEC2": {
      "Properties": {
        "DestinationCidrBlock": "10.200.0.0/16",
        "TransitGatewayAttachmentId": {
          "Ref": "NetworkNetworkMainAndSharedServicesMainPeeringTransitGatewayPeeringAttachment6A5D4528",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRoute",
    },
    "NetworkNetworkMainAndSharedServicesMainPeeringTransitGatewayPeeringAttachment6A5D4528": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetTransitGatewayAttachmentCustomResourceProviderLogGroup41699CF3",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354",
            "Arn",
          ],
        },
        "name": "Network-Main-And-SharedServices-Main-Peering",
        "region": "us-east-1",
        "transitGatewayId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "type": "peering",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetTransitGatewayAttachment",
      "UpdateReplacePolicy": "Delete",
    },
    "SharedServicesMainNetworkMainCorePropagationB8A9444B": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainCoreidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "SharedServicesMainNetworkMainSegregatedPropagation1734E165": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSegregatedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "SharedServicesMainNetworkMainSharedAssociationFE2C7420": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
    },
    "SharedServicesMainNetworkMainSharedPropagationA83F55E7": {
      "Properties": {
        "TransitGatewayAttachmentId": {
          "Ref": "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8",
        },
        "TransitGatewayRouteTableId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainrouteTablesNetworkMainSharedidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
    },
    "SharedServicesMainSharedServicesVpcTransitGatewayAttachmentE1E0A8A8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomGetTransitGatewayAttachmentCustomResourceProviderLogGroup41699CF3",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomGetTransitGatewayAttachmentCustomResourceProviderHandler7E079354",
            "Arn",
          ],
        },
        "name": "SharedServices-Main",
        "region": "us-east-1",
        "roleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-DescribeTgwAttachRole-us-east-1",
            ],
          ],
        },
        "transitGatewayId": {
          "Ref": "SsmParameterValueacceleratornetworktransitGatewaysNetworkMainidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "type": "vpc",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::GetTransitGatewayAttachment",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-555555555555-us-east-1/version",
        "Type": "String",
        "Value": "1.11.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamCrossAccountVpcPeering03403783": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/CrossAccount/id",
        "Type": "String",
        "Value": {
          "Ref": "CrossAccountVpcPeering9E0C69A2",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamLookupCrossAccount444444444444usEast13BE87606": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-Main/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesMain444444444444SharedServicesAppA08A11B17": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-App-A/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamLookupSharedServicesMain444444444444SharedServicesAppB580D7687": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::444444444444:role/AWSAccelerator-VpcPeeringRole-us-east-1",
            ],
          ],
        },
        "invokingAccountID": "555555555555",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "444444444444",
        "parameterName": "/accelerator/network/vpc/SharedServices-Main/routeTable/SharedServices-App-B/id",
        "parameterRegion": "us-east-1",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmParamNetworkEndpointsToInspectionVpcPeering66A4E12A": {
      "Properties": {
        "Name": "/accelerator/network/vpcPeering/NetworkEndpointsToInspection/id",
        "Type": "String",
        "Value": {
          "Ref": "NetworkEndpointsToInspectionVpcPeeringE81AF602",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-NetworkAssociationsStack-555555555555-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
  },
}
`;
